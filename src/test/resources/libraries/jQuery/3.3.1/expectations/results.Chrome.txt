1. ready: jQuery.isReady (2) [fc73fe42]
2. ready: jQuery ready (10) [b6c34eda]
3. ready: jQuery.when(jQuery.ready) (2) [2abf4f9f]
4. ready: Promise.resolve(jQuery.ready) (2) [cdc6ad2e]
5. ready: Error in ready callback does not halt all future executions (gh-1823) (1) [4d1242b7]
6. ready: holdReady test needs to be a standalone test since it deals with DOM ready (2) [216c3c4d]
7. basic: ajax (4) [b948dcce]
8. basic: attributes (6) [0b3d9985]
9. basic: css (1) [9a9f4995]
10. basic: show/hide (2) [201dfb26]
11. basic: core (18) [b949da4d]
12. basic: data (4) [b94a1a58]
13. basic: dimensions (3) [0bc22ffb]
14. basic: event (1) [70109dac]
15. basic: manipulation (5) [4555384b]
16. basic: offset (3) [a2329bc1]
17. basic: selector (2) [5410178d]
18. basic: serialize (2) [720bb8f2]
19. basic: traversing (12) [1c17bddd]
20. basic: wrap (3) [b952faf8]
21. core: Basic requirements (7) [b8dae67f]
22. core: jQuery() (29) [0680cf5c]
23. core: jQuery(selector, context) (3) [196dd81a]
24. core: globalEval (3) [0440d2fc]
25. core: globalEval with 'use strict' (1) [8ca57754]
26. core: globalEval execution after script injection (#7862) (1) [d8523463]
27. core: noConflict (7) [59f980d0]
28. core: trim (13) [9dba41ff]
29. core: isPlainObject (23) [887480e2]
30. core: isPlainObject(Symbol) (2) [26db572b]
31. core: isPlainObject(localStorage) (1) [119383d3]
32. core: isPlainObject(Object.assign(...)) (1) [c93c077e]
33. core: isXMLDoc - HTML (4) [e01cfc16]
34. core: XSS via location.hash (1) [78959170]
35. core: isXMLDoc - XML (3) [59cf9e2c]
36. core: jQuery('html') (18) [a16831a7]
37. core: jQuery(element with non-alphanumeric name) (36) [cbf4e276]
38. core: jQuery('massive html #7990') (3) [9798de1f]
39. core: jQuery('html', context) (1) [21c16e10]
40. core: jQuery(selector, xml).text(str) - loaded via xml document (2) [fafab1b5]
41. core: end() (3) [18b8b0df]
42. core: length (1) [09d60583]
43. core: get() (1) [18d1049a]
44. core: toArray() (1) [1809f262]
45. core: inArray() (19) [51380078]
46. core: get(Number) (2) [56995191]
47. core: get(-Number) (2) [17b75382]
48. core: each(Function) (1) [0fa24667]
49. core: slice() (7) [aedfaf16]
50. core: first()/last() (4) [976fc3d2]
51. core: map() (2) [1923b120]
52. core: jQuery.map (25) [698e2e09]
53. core: jQuery.merge() (10) [8265e566]
54. core: jQuery.grep() (8) [8f4e4e8a]
55. core: jQuery.grep(Array-like) (7) [ac3d13ff]
56. core: jQuery.extend(Object, Object) (28) [bbeda45c]
57. core: jQuery.extend(Object, Object {created with "defineProperties"}) (2) [c487b9d8]
58. core: jQuery.extend(true,{},{a:[], o:{}}); deep copy with array, followed by object (2) [a33dcb83]
59. core: jQuery.each(Object,Function) (23) [5889c4d8]
60. core: jQuery.each/map(undefined/null,Function) (1) [8a0df372]
61. core: JIT compilation does not interfere with length retrieval (gh-2145) (4) [35566d78]
62. core: jQuery.makeArray (1, 14, 15) [696f93f8]
63. core: jQuery.inArray (3) [bb7b4e61]
64. core: jQuery.isEmptyObject (2) [f2b417cf]
65. core: jQuery.parseHTML (23) [b2541bcb]
66. core: jQuery.parseHTML(<a href>) - gh-2965 (1) [68983673]
67. core: jQuery.parseHTML (1) [982f5db5]
68. core: jQuery.parseXML (8) [2f0b33d7]
69. core: Conditional compilation compatibility (#13274) (3) [a911fa9b]
70. core: document ready when jQuery loaded asynchronously (#13655) (1) [377d9701]
71. core: Tolerating alias-masked DOM properties (#14074) (1) [676cffc3]
72. core: Don't call window.onready (#14802) (1) [3cfc6632]
73. core: Iterability of jQuery objects (gh-1693) (1) [d6e53216]
74. core: jQuery.readyException (original) (1) [0b62e4f1]
75. core: jQuery.readyException (custom) (1) [98c3e191]
76. callbacks: jQuery.Callbacks( "" ) - no filter (20) [554f0971]
77. callbacks: jQuery.Callbacks( { } ) - no filter (20) [379676d3]
78. callbacks: jQuery.Callbacks( "" ) - filter (20) [176f26fe]
79. callbacks: jQuery.Callbacks( { } ) - filter (20) [e55384dc]
80. callbacks: jQuery.Callbacks( "once" ) - no filter (20) [6f2937d0]
81. callbacks: jQuery.Callbacks( { "once": true } ) - no filter (20) [058a58a6]
82. callbacks: jQuery.Callbacks( "once" ) - filter (20) [e07facff]
83. callbacks: jQuery.Callbacks( { "once": true } ) - filter (20) [41d02be9]
84. callbacks: jQuery.Callbacks( "memory" ) - no filter (20) [b67f98d0]
85. callbacks: jQuery.Callbacks( { "memory": true } ) - no filter (20) [39a0ac66]
86. callbacks: jQuery.Callbacks( "memory" ) - filter (20) [eaacebff]
87. callbacks: jQuery.Callbacks( { "memory": true } ) - filter (20) [c6c07029]
88. callbacks: jQuery.Callbacks( "unique" ) - no filter (20) [e50a5000]
89. callbacks: jQuery.Callbacks( { "unique": true } ) - no filter (20) [f6593396]
90. callbacks: jQuery.Callbacks( "unique" ) - filter (20) [160102cf]
91. callbacks: jQuery.Callbacks( { "unique": true } ) - filter (20) [b738b6f9]
92. callbacks: jQuery.Callbacks( "stopOnFalse" ) - no filter (20) [c8ec180b]
93. callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - no filter (20) [3aa79537]
94. callbacks: jQuery.Callbacks( "stopOnFalse" ) - filter (20) [522c2ea4]
95. callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - filter (20) [a349a0f8]
96. callbacks: jQuery.Callbacks( "once memory" ) - no filter (20) [361124ed]
97. callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - no filter (20) [cd468c6d]
98. callbacks: jQuery.Callbacks( "once memory" ) - filter (20) [15a31d02]
99. callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - filter (20) [bb32e582]
100. callbacks: jQuery.Callbacks( "once unique" ) - no filter (20) [649bdc1d]
101. callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - no filter (20) [89ff139d]
102. callbacks: jQuery.Callbacks( "once unique" ) - filter (20) [40f733d2]
103. callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - filter (20) [abab2c52]
104. callbacks: jQuery.Callbacks( "once stopOnFalse" ) - no filter (20) [73ee960e]
105. callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - no filter (20) [6f9fa190]
106. callbacks: jQuery.Callbacks( "once stopOnFalse" ) - filter (20) [338b2781]
107. callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - filter (20) [e4f79b3f]
108. callbacks: jQuery.Callbacks( "memory unique" ) - no filter (20) [a2865b1d]
109. callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - no filter (20) [6475e75d]
110. callbacks: jQuery.Callbacks( "memory unique" ) - filter (20) [443514d2]
111. callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - filter (20) [9a0af092]
112. callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - no filter (20) [0fbb770e]
113. callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - no filter (20) [051725d0]
114. callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - filter (20) [a0d1e681]
115. callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - filter (20) [fd087eff]
116. callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - no filter (20) [217ce63e]
117. callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - no filter (20) [a9dbfca0]
118. callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - filter (20) [7b2a4551]
119. callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - filter (20) [653f9a2f]
120. callbacks: jQuery.Callbacks( options ) - options are copied (1) [923a6442]
121. callbacks: jQuery.Callbacks.fireWith - arguments are copied (1) [78b2320f]
122. callbacks: jQuery.Callbacks.remove - should remove all instances (1) [cb02f2c3]
123. callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (1) [5258dfa5]
124. deferred: jQuery.Deferred (3, 1, 4) [09ee1fb2]
125. deferred: jQuery.Deferred - new operator (3, 1, 4) [62d20265]
126. deferred: jQuery.Deferred - chainability (10) [8f1ac28a]
127. deferred: jQuery.Deferred.then - filtering (done) (2, 2, 4) [d0d4d16f]
128. deferred: jQuery.Deferred.then - filtering (fail) (2, 2, 4) [d0ea9153]
129. deferred: jQuery.Deferred.then - filtering (progress) (1, 2, 3) [357d8424]
130. deferred: jQuery.Deferred.then - deferred (done) (1, 2, 3) [877e85a6]
131. deferred: jQuery.Deferred.then - deferred (fail) (1, 2, 3) [8794458a]
132. deferred: jQuery.Deferred.then - deferred (progress) (1, 2, 3) [5b3444db]
133. deferred: jQuery.Deferred.then - context (1, 0, 1) [d230e435]
134. deferred: jQuery.when (34) [6b29306d]
135. deferred: jQuery.when - joined (13, 35, 48) [fe8b6cef]
136. support: boxModel (1, 0, 1) [a208714b]
137. support: global failure (2, 0, 2) [5f7c257a]
138. data: expando (1) [59d58323]
139. data: jQuery.data (8, 116, 124) [c9750428]
140. data: jQuery.acceptData (2, 0, 2) [f98e92d0]
141. data: .data() (5) [d972e5e7]
142. data: .data(String) and .data(String, Object) (13, 16, 29) [670eeb82]
143. data: data-* attributes (40) [e11170de]
144. data: .data(Object) (4) [b21f7be8]
145. data: jQuery.removeData (10) [842bb84c]
146. data: .removeData() (6) [dde09a8b]
147. data: JSON serialization (#8108) (1) [c57d2337]
148. data: jQuery.data should follow html5 specification regarding camel casing (10) [d89a4121]
149. data: jQuery.data should not miss data with preset hyphenated property names (2) [d088f21e]
150. data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24) [ee44b820]
151. data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (27) [505ec023]
152. data: Triggering the removeData should not throw exceptions. (#10080) (2, 3, 5) [8a66db26]
153. data: Only check element attributes once when calling .data() - #8909 (2) [f7fc1685]
154. data: JSON data- attributes can have newlines (1) [0c916fc1]
155. queue: queue() with other types (14) [cfea7bc8]
156. queue: queue(name) passes in the next item in the queue as a parameter (2) [a0b7b5e8]
157. queue: queue() passes in the next item in the queue as a parameter to fx queues (3) [b635b198]
158. queue: callbacks keep their place in the queue (5) [b44ac744]
159. queue: delay() (2) [67daca39]
160. queue: clearQueue(name) clears the queue (2) [cbec94c3]
161. queue: clearQueue() clears the fx queue (1) [43a0847c]
162. queue: fn.promise() - called when fx queue is empty (2, 0, 2) [3d95283f]
163. queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (5) [bd53cbc7]
164. queue: fn.promise( "queue" ) - waits for animation to complete before resolving (2) [8c35be6e]
165. queue: .promise(obj) (2) [5302fde2]
166. queue: delay() can be stopped (3) [6927c207]
167. queue: queue stop hooks (2) [a3692fac]
168. attributes: jQuery.propFix integrity test (1, 0, 1) [6ba2179e]
169. attributes: attr(String) (3, 30, 33) [e3b0c806]
170. attributes: attr(String) in XML Files (3) [cbf8a58d]
171. attributes: attr(String, Function) (2) [e7a05bda]
172. attributes: attr(Hash) (3) [ce0ca229]
173. attributes: attr(String, Object) (2, 0, 2) [dd42a793]
174. attributes: attr(jquery_method) (9, 0, 9) [93f4c919]
175. attributes: attr(String, Object) - Loaded via XML document (2) [39a11351]
176. attributes: attr('tabindex') (8) [4e40e254]
177. attributes: attr('tabindex', value) (9) [ac9022c1]
178. attributes: removeAttr(String) (1, 11, 12) [88bb7eea]
179. attributes: removeAttr(String) in XML (7) [5ce00072]
180. attributes: removeAttr(Multi String, variable space width) (8) [0c02eb67]
181. attributes: prop(String, Object) (1, 30, 31) [5c3c4d05]
182. attributes: prop('tabindex') (2, 6, 8) [8bbb10c6]
183. attributes: prop('tabindex', value) (1, 8, 9) [ea2c300f]
184. attributes: removeProp(String) (6) [e462b65c]
185. attributes: val() (26) [b03d455d]
186. attributes: val() respects numbers without exception (Bug #9319) (4) [114aac89]
187. attributes: val(String/Number) (8) [6de1bd4e]
188. attributes: val(Function) (8) [221ff865]
189. attributes: val(Array of Numbers) (Bug #7123) (4) [c6dd91b4]
190. attributes: val(Function) with incoming value (10) [41db3b56]
191. attributes: val(select) after form.reset() (Bug #2551) (3) [4e5c2644]
192. attributes: addClass(String) (2, 0, 2) [fe5d0aec]
193. attributes: addClass(Function) (2, 0, 2) [de2e1305]
194. attributes: addClass(Function) with incoming value (1, 56, 57) [d371c5f6]
195. attributes: removeClass(String) - simple (7) [926c1586]
196. attributes: removeClass(Function) - simple (7) [b788da4d]
197. attributes: removeClass(Function) with incoming value (1, 56, 57) [6f69a149]
198. attributes: removeClass() removes duplicates (1) [2f658969]
199. attributes: toggleClass(String|boolean|undefined[, boolean]) (17) [2b9e011f]
200. attributes: toggleClass(Function[, boolean]) (17) [0c5ee926]
201. attributes: toggleClass(Fucntion[, boolean]) with incoming value (14) [303c9d4d]
202. attributes: addClass, removeClass, hasClass (17) [a56f0856]
203. attributes: contents().hasClass() returns correct values (2) [c32ecd68]
204. attributes: coords returns correct values in IE6/IE7, see #10828 (2) [7e4920d6]
205. event: null or undefined handler (2) [4f7c55f4]
206. event: bind(),live(),delegate() with non-null,defined data (2, 0, 2) [d0166d13]
207. event: Handler changes and .trigger() order (1, 0, 1) [92be6c97]
208. event: bind(), with data (4) [8857fa90]
209. event: click(), with data (3) [1bb483e9]
210. event: bind(), with data, trigger with data (4) [5912dad8]
211. event: bind(), multiple events at once (2) [cb716923]
212. event: bind(), five events at once (1) [5d3bc641]
213. event: bind(), multiple events at once and namespaces (7) [63e68cfe]
214. event: bind(), namespace with special add (3, 24, 27) [ce01e239]
215. event: bind(), no data (1) [6e1f0575]
216. event: bind/one/unbind(Object) (6) [a0ab2ab1]
217. event: live/die(Object), delegate/undelegate(String, Object) (2, 0, 2) [06e54ef0]
218. event: live/delegate immediate propagation (2, 0, 2) [19576d03]
219. event: bind/delegate bubbling, isDefaultPrevented (2) [32aad768]
220. event: bind(), iframes (1, 1, 2) [5ac6951b]
221. event: bind(), trigger change on select (5) [b116a209]
222. event: bind(), namespaced events, cloned events (18) [5eeae1c2]
223. event: bind(), multi-namespaced events (6) [34a55de8]
224. event: bind(), with same function (2) [9ec07e2c]
225. event: bind(), make sure order is maintained (1) [97639201]
226. event: bind(), with different this object (4) [8de37b74]
227. event: bind(name, false), unbind(name, false) (3) [3a8c39d5]
228. event: live(name, false), die(name, false) (2, 0, 2) [a541e460]
229. event: delegate(selector, name, false), undelegate(selector, name, false) (3) [3993f5b5]
230. event: bind()/trigger()/unbind() on plain object (7) [f4817272]
231. event: unbind(type) (1) [2fb4a49f]
232. event: unbind(eventObject) (4) [37d37e60]
233. event: hover() and hover pseudo-event (3) [d321589d]
234. event: mouseover triggers mouseenter (1) [1ad46faf]
235. event: withinElement implemented with jQuery.contains() (1) [976ee805]
236. event: mouseenter, mouseleave don't catch exceptions (2) [7700a8fe]
237. event: trigger() shortcuts (1, 5, 6) [962f5e44]
238. event: trigger() bubbling (18) [2b1e2612]
239. event: trigger(type, [data], [fn]) (2, 0, 2) [5bfbb1c3]
240. event: submit event bubbles on copied forms (#11649) (3) [8e85e03a]
241. event: change event bubbles on copied forms (#11796) (3) [ec9b3869]
242. event: trigger(eventObject, [data], [fn]) (28) [f8fcfbc8]
243. event: .trigger() bubbling on disconnected elements (#10489) (2) [57fcf00f]
244. event: .trigger() doesn't bubble load event (#10717) (1) [5b3fa683]
245. event: Delegated events in SVG (#10791) (2) [c13446e7]
246. event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (5) [7304f0a8]
247. event: Submit event can be stopped (#11049) (1) [85069023]
248. event: on(beforeunload) creates/deletes window property instead of adding/removing event listener (1, 2, 3) [71bf1e2f]
249. event: jQuery.Event( type, props ) (5) [9ee7af47]
250. event: jQuery.Event.currentTarget (2) [e85b02c8]
251. event: toggle(Function, Function, ...) (13, 2, 15) [de6f91a5]
252. event: .live()/.die() (2, 0, 2) [a79ff749]
253. event: die all bound events (1, 0, 1) [ffd5817c]
254. event: live with multiple events (1, 0, 1) [ef7efa01]
255. event: live with namespaces (2, 0, 2) [42c6e6a0]
256. event: live with change (2, 0, 2) [cf34f7d8]
257. event: live with submit (2, 0, 2) [eb3a2440]
258. event: live with special events (2, 0, 2) [8142b288]
259. event: .delegate()/.undelegate() (6, 64, 70) [7e2afe70]
260. event: jQuery.off using dispatched jQuery.Event (1) [a6cd39f6]
261. event: delegated event with delegateTarget-relative selector (3) [72cc648d]
262. event: stopPropagation() stops directly-bound events on delegated target (1) [97a76f1f]
263. event: undelegate all bound events (2) [5697dcda]
264. event: delegate with multiple events (1) [e9d4e808]
265. event: delegate with change (2, 4, 6) [f904d5f1]
266. event: delegate with submit (1, 2, 3) [150a0259]
267. event: undelegate() with only namespaces (2) [d755cc71]
268. event: Non DOM element events (1) [c54cd510]
269. event: inline handler returning false stops default (1) [f2abf84c]
270. event: window resize (2) [50fdc562]
271. event: focusin bubbles (2) [e1fefb42]
272. event: custom events with colons (#3533, #8272) (1) [8e42386e]
273. event: .on and .off (9) [fa721d1f]
274. event: special bind/delegate name mapping (7) [4c518eab]
275. event: .on and .off, selective mixed removal (#10705) (7) [7bd80ad7]
276. event: .on( event-map, null-selector, data ) #11130 (2, 5, 7) [1f7323b9]
277. event: clone() delegated events (#11076) (3) [3233ef57]
278. event: fixHooks extensions (2, 0, 2) [7bcb00b7]
279. event: global failure (2, 0, 2) [1d30e34f]
280. selector - jQuery only: element - jQuery only (4, 3, 7) [dcd42275]
281. selector - jQuery only: class - jQuery only (4) [2aa58b71]
282. selector - jQuery only: attributes - jQuery only (2, 0, 2) [a9f4e0d4]
283. selector - jQuery only: pseudo - visibility (2, 0, 2) [b9519b85]
284. selector - jQuery only: disconnected nodes (4) [28cfd94e]
285. selector - jQuery only: selector/html5_selector (2, 0, 2) [46e77f42]
286. selector - jQuery only: selector/sizzle_cache (2, 0, 2) [bd4d5f80]
287. traversing: find(String) (1, 4, 5) [44dc4676]
288. traversing: find(node|jQuery object) (11) [165911c0]
289. traversing: is(String|undefined) (30) [53d824d3]
290. traversing: is(jQuery) (1, 20, 21) [09b3677a]
291. traversing: is() with positional selectors (23) [435ba0da]
292. traversing: index() (2) [2a27d866]
293. traversing: index(Object|String|undefined) (16) [c3ba094a]
294. traversing: filter(Selector|undefined) (9) [47ce3153]
295. traversing: filter(Function) (2) [33bf57ce]
296. traversing: filter(Element) (1) [5405ec90]
297. traversing: filter(Array) (1) [5296a193]
298. traversing: filter(jQuery) (1) [40f92948]
299. traversing: filter() with positional selectors (19) [9a4c6fa8]
300. traversing: closest() (1, 13, 14) [53163f6d]
301. traversing: closest(jQuery) (2, 6, 8) [588031af]
302. traversing: not(Selector|undefined) (3, 8, 11) [cd9ff434]
303. traversing: not(Element) (1) [ce912c4f]
304. traversing: not(Function) (1, 1, 2) [0a9c0fef]
305. traversing: not(Array) (2) [961cc512]
306. traversing: not(jQuery) (1, 0, 1) [6e3775a9]
307. traversing: has(Element) (3) [879c1468]
308. traversing: has(Selector) (5) [1507abcf]
309. traversing: has(Arrayish) (4) [266a38e9]
310. traversing: addBack() (5) [51c2327c]
311. traversing: siblings([String]) (7) [9243394e]
312. traversing: children([String]) (3) [7c54abdc]
313. traversing: parent([String]) (5) [a93e9c07]
314. traversing: parents([String]) (1, 4, 5) [29f562ac]
315. traversing: parentsUntil([String]) (3, 6, 9) [c1716bb2]
316. traversing: next([String]) (1, 4, 5) [2604c650]
317. traversing: prev([String]) (4) [9e01cd90]
318. traversing: nextAll([String]) (4) [29363911]
319. traversing: prevAll([String]) (4) [5764e9d1]
320. traversing: nextUntil([String]) (11) [fe62ae8e]
321. traversing: prevUntil([String]) (10) [5ba82f4e]
322. traversing: contents() (12) [993eada8]
323. traversing: add(String|Element|Array|undefined) (2, 14, 16) [fdf27913]
324. traversing: add(String, Context) (6) [5c1fe653]
325. traversing: eq('-1') #10616 (3) [abea487b]
326. manipulation: text() (5) [79abb7cd]
327. manipulation: text(undefined) (1) [b76b69b5]
328. manipulation: text(String) (4) [b853a6bc]
329. manipulation: text(Function) (4) [f4ecfad5]
330. manipulation: text(Function) with incoming value (2) [60fea5c6]
331. manipulation: wrap(String|Element) (2, 17, 19) [49e3fdf9]
332. manipulation: wrap(Function) (2, 17, 19) [b2a505b2]
333. manipulation: wrap(Function) with index (#10177) (6) [ff17d18c]
334. manipulation: wrap(String) consecutive elements (#10177) (12) [d089ffde]
335. manipulation: wrapAll(String|Element) (8) [15b5eb08]
336. manipulation: wrapInner(String|Element) (11) [f019fbfd]
337. manipulation: wrapInner(Function) (11) [c0a2d6b6]
338. manipulation: unwrap() (9) [ffe02bc3]
339. manipulation: append(String|Element|Array&lt;Element&gt;|jQuery) (2, 9, 11) [61d4cb69]
340. manipulation: append(Function) (2, 9, 11) [72a7c4c2]
341. manipulation: append(Function) with incoming value (12) [80163733]
342. manipulation: append the same fragment with events (Bug #6997, 5566) (2) [5aad1eac]
343. manipulation: append HTML5 sectioning elements (Bug #6485) (2) [2831131c]
344. manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (1) [6118970a]
345. manipulation: html5 clone() cannot use the fragment cache in IE (#6485) (1) [a2e4736a]
346. manipulation: html(String) with HTML5 (Bug #6485) (2) [9dd21615]
347. manipulation: IE8 serialization bug (2) [7eedaf01]
348. manipulation: html() object element #10324 (1) [4c0b7603]
349. manipulation: append(xml) (1) [15c79ec1]
350. manipulation: appendTo(String|Element|Array&lt;Element&gt;|jQuery) (2, 8, 10) [75ecdf44]
351. manipulation: prepend(String|Element|Array&lt;Element&gt;|jQuery) (6) [80afa0ff]
352. manipulation: prepend(Function) (6) [2ee8dfd8]
353. manipulation: prepend(Function) with incoming value (10) [c8e0eb49]
354. manipulation: prependTo(String|Element|Array&lt;Element&gt;|jQuery) (1, 5, 6) [4968a75a]
355. manipulation: before(String|Element|Array&lt;Element&gt;|jQuery) (2, 5, 7) [2deef84e]
356. manipulation: before(Function) (2, 5, 7) [a9ebbae7]
357. manipulation: before and after w/ empty object (#10812) (2, 0, 2) [e9f42ddf]
358. manipulation: before and after on disconnected node (#10517) (2, 0, 2) [1f427d13]
359. manipulation: insertBefore(String|Element|Array&lt;Element&gt;|jQuery) (4) [025173a7]
360. manipulation: after(String|Element|Array&lt;Element&gt;|jQuery) (2, 5, 7) [73af3a8d]
361. manipulation: after(Function) (2, 5, 7) [e3653ce6]
362. manipulation: insertAfter(String|Element|Array&lt;Element&gt;|jQuery) (4) [a3d37014]
363. manipulation: replaceWith(String|Element|Array&lt;Element&gt;|jQuery) (2, 20, 22) [9182588b]
364. manipulation: replaceWith(Function) (2, 21, 23) [85c93a64]
365. manipulation: replaceWith(string) for more than one element (3) [691afae2]
366. manipulation: replaceAll(String|Element|Array&lt;Element&gt;|jQuery) (10) [7018d69c]
367. manipulation: jQuery.clone() (#8017) (2) [420b951d]
368. manipulation: clone() (#8070) (2) [be4a4d5c]
369. manipulation: clone() (1, 43, 44) [43f2961f]
370. manipulation: clone(script type=non-javascript) (#11359) (3) [ba6bf709]
371. manipulation: clone(form element) (Bug #3879, #6655) (5) [5b5d57f1]
372. manipulation: clone(multiple selected options) (Bug #8129) (1) [b4779b24]
373. manipulation: clone() on XML nodes (2) [549e70a8]
374. manipulation: clone() on local XML nodes with html5 nodename (2) [14569a30]
375. manipulation: html(undefined) (1) [3ff2cc77]
376. manipulation: html() on empty set (1) [efc42543]
377. manipulation: html(String) (2, 0, 2) [f41b0b3a]
378. manipulation: html(Function) (2, 0, 2) [5c6d37d3]
379. manipulation: html(Function) with incoming value (1, 22, 23) [61cc77c4]
380. manipulation: remove() (9) [daf335a4]
381. manipulation: detach() (9) [37c6ccf3]
382. manipulation: empty() (3) [af85020f]
383. manipulation: jQuery.cleanData (14) [3cbc3042]
384. manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (1) [88c3811f]
385. manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (3) [2decd219]
386. manipulation: jQuery.buildFragment - plain objects are not a document #8950 (1) [8b8e8f7a]
387. manipulation: jQuery.clone - no exceptions for object elements #9587 (1) [0202079b]
388. manipulation: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2) [7eac83d7]
389. manipulation: Cloned, detached HTML5 elems (#10667,10670) (7) [bc2d65ae]
390. manipulation: jQuery.fragments cache expectations (3, 0, 3) [a7c195a3]
391. manipulation: Guard against exceptions when clearing safeChildNodes (1) [a093336a]
392. manipulation: Ensure oldIE creates a new set on appendTo (#8894) (5, 1, 6) [bab3ba63]
393. manipulation: html() - script exceptions bubble (#11743) (5, 0, 5) [af5cc233]
394. manipulation: checked state is cloned with clone() (2) [0c51698e]
395. manipulation: manipulate mixed jQuery and text (#12384, #12346) (2) [4cb95a05]
396. manipulation: global failure (2, 0, 2) [827533ec]
397. wrap: wrap(String|Element) (19) [3ad4676c]
398. wrap: wrap(Function) (19) [14b24165]
399. wrap: wrap(Function) with index (#10177) (6) [e82d35bf]
400. wrap: wrap(String) consecutive elements (#10177) (12) [199d8111]
401. wrap: wrapAll(String) (5) [62f06b95]
402. wrap: wrapAll(Function) (5) [6b6bed6e]
403. wrap: wrapAll(Function) check execution characteristics (3) [2b4b8966]
404. wrap: wrapAll(Element) (3) [8fa022f0]
405. wrap: wrapInner(String) (6) [13d74a4a]
406. wrap: wrapInner(Element) (5) [fb951adb]
407. wrap: wrapInner(Function) returns String (6) [a98bbc8b]
408. wrap: wrapInner(Function) returns Element (5) [94f851c2]
409. wrap: unwrap() (9) [d4a4e9b6]
410. wrap: unwrap( selector ) (5) [ba3af195]
411. wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2) [df27d084]
412. wrap: wrapping scripts (#10470) (2) [52f4a540]
413. css: css(String|Hash) (4, 31, 35) [bd70ccae]
414. css: css() explicit and relative values (29) [55e67956]
415. css: css(String, Object) (22) [040f8367]
416. css: css(String, Object) for MSIE (4, 2, 6) [9bc97ad2]
417. css: Setting opacity to 1 properly removes filter: style (#6652) (1, 1, 2) [0cbec846]
418. css: css(String, Function) (3) [8ea592ae]
419. css: css(String, Function) with incoming value (3) [d52dd71f]
420. css: css(Object) where values are Functions (3) [90ac0dfe]
421. css: css(Object) where values are Functions with incoming values (3) [b8bbc3e4]
422. css: show(); hide() (22) [80fc46bf]
423. css: show() resolves correct default display #8099 (2, 5, 7) [011c2478]
424. css: show() resolves correct default display, detached nodes (#10006) (5, 6, 11) [f241d619]
425. css: toggle() (9) [886670ce]
426. css: hide hidden elements (bug #7141) (3) [03e6c6eb]
427. css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (4) [b2ecf73b]
428. css: :visible selector works properly on table elements (bug #4512) (1) [42107fef]
429. css: :visible selector works properly on children with a hidden parent (bug #4512) (1) [f65ec652]
430. css: internal ref to elem.runtimeStyle (bug #7608) (1) [088cf83d]
431. css: marginRight computed style (bug #3333) (1) [9a54c243]
432. css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (1, 2, 3) [9d1b7146]
433. css: jQuery.cssProps behavior, (bug #8402) (1, 2, 3) [bf0079da]
434. css: widows & orphans #8936 (2, 2, 4) [2d0ffbea]
435. css: can't get css for disconnected in IE<9, see #10254 and #8388 (2) [ce12502e]
436. css: can't get background-position in IE<9, see #10796 (8) [a21fbb69]
437. css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (1) [543290a6]
438. css: percentage properties for left and top should be transformed to pixels, see #9505 (2) [9c39f1cc]
439. css: Do not append px to 'fill-opacity' #9548 (1) [764bde8c]
440. css: css('width') and css('height') should respect box-sizing, see #11004 (1, 4, 5) [e203a9fa]
441. css: certain css values of 'normal' should be convertable to a number, see #8627 (1, 2, 3) [f92cd943]
442. css: cssHooks - expand (15) [0effefe7]
443. serialize: jQuery.param() (13, 9, 22) [9004571a]
444. serialize: jQuery.param() Constructed prop values (4) [2ed25aef]
445. serialize: serialize() (3, 2, 5) [1a0f6125]
446. ajax: jQuery.ajax() - success callbacks (3, 2, 5) [11a69f33]
447. ajax: jQuery.ajax() - success callbacks - (url, options) syntax (3, 2, 5) [473f095d]
448. ajax: jQuery.ajax() - success callbacks (late binding) (3, 1, 4) [df5387e3]
449. ajax: jQuery.ajax() - success callbacks (oncomplete binding) (4, 1, 5) [2a91caf1]
450. ajax: jQuery.ajax() - success callbacks (very late binding) (3, 1, 4) [14e22ecf]
451. ajax: jQuery.ajax() - success callbacks (order) (3, 0, 3) [1a37fcd6]
452. ajax: jQuery.ajax() - error callbacks (2, 3, 5) [ed8cd778]
453. ajax: jQuery.ajax - multiple method signatures introduced in 1.5 ( #8107) (2, 0, 2) [9f1b507d]
454. ajax: jQuery.ajax() - textStatus and errorThrown values (4) [4af235be]
455. ajax: jQuery.ajax() - responseText on error (1, 0, 1) [7d19049b]
456. ajax: .ajax() - retry with jQuery.ajax( this ) (2) [8ff5ff4d]
457. ajax: .ajax() - headers (2, 0, 2) [3b64b606]
458. ajax: .ajax() - Accept header (3, 0, 3) [83e5f305]
459. ajax: .ajax() - contentType (1, 0, 1) [8fc459d3]
460. ajax: .ajax() - protocol-less urls (1) [b6ab0b96]
461. ajax: .ajax() - hash (3, 0, 3) [3e1d0a8e]
462. ajax: jQuery ajax - cross-domain detection (6) [ff490d43]
463. ajax: .load() - 404 error callbacks (2, 1, 3) [95c73114]
464. ajax: jQuery.ajax() - abort (2, 4, 6) [a2c63072]
465. ajax: Ajax events with context (14) [37234c18]
466. ajax: jQuery.ajax context modification (1) [4d081cf9]
467. ajax: jQuery.ajax context modification through ajaxSetup (4) [ac291d3b]
468. ajax: jQuery.ajax() - disabled globals (1, 2, 3) [2120810a]
469. ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (2, 0, 2) [b4659c30]
470. ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (over JSONP) (3, 0, 3) [e65e8255]
471. ajax: jQuery.ajax - HEAD requests (2, 0, 2) [feec9345]
472. ajax: jQuery.ajax - beforeSend (1, 0, 1) [25451e06]
473. ajax: jQuery.ajax - beforeSend, cancel request (#2688) (2) [f79bc48d]
474. ajax: jQuery.ajax - beforeSend, cancel request manually (2) [353e3bf0]
475. ajax: jQuery.ajax - dataType html (2, 0, 2) [645d8988]
476. ajax: synchronous request (1, 0, 1) [780f453c]
477. ajax: synchronous request with callbacks (2, 0, 2) [08af6158]
478. ajax: pass-through request object (3, 5, 8) [bda4be6b]
479. ajax: ajax cache (2, 6, 8) [2e8aa47e]
480. ajax: load(String) (2) [701a33d2]
481. ajax: load(String,null) (2) [090ad4cd]
482. ajax: load(String,undefined) (2) [8b4bf66e]
483. ajax: load('url selector') (1) [b6be73f3]
484. ajax: load(String, Function) with ajaxSetup on dataType json, see #2046 (1, 0, 1) [70085c7c]
485. ajax: load(String, Function) - simple: inject text into DOM (2, 0, 2) [1616e2cb]
486. ajax: load(String, Function) - check scripts (6, 0, 6) [e8874bc3]
487. ajax: load(String, Function) - check file with only a script tag (3, 0, 3) [90e4f55d]
488. ajax: load(String, Function) - dataFilter in ajaxSettings (2, 0, 2) [6024362d]
489. ajax: load(String, Object, Function) (2, 0, 2) [d8687ff3]
490. ajax: load(String, String, Function) (2, 0, 2) [293febe1]
491. ajax: load() - data specified in ajaxSettings is merged in (#10524) (1, 0, 1) [cac476f1]
492. ajax: load() - callbacks get the correct parameters (8) [03f1f37b]
493. ajax: jQuery.get(String, Function) - data in ajaxSettings (#8277) (1, 0, 1) [9d3e3ca9]
494. ajax: jQuery.get(String, Hash, Function) - parse xml and use text() on nodes (2, 0, 2) [eb03657b]
495. ajax: jQuery.getScript(String, Function) - with callback (3, 0, 3) [47417add]
496. ajax: jQuery.getScript(String, Function) - no callback (3, 0, 3) [147f8fc2]
497. ajax: jQuery.ajax() - JSONP, Same Domain (33, 2, 35) [bd02fa60]
498. ajax: jQuery.ajax() - JSONP, Cross Domain (17, 2, 19) [44252882]
499. ajax: jQuery.ajax() - script, Remote (2, 0, 2) [bc1195a3]
500. ajax: jQuery.ajax() - script, Remote with POST (3, 0, 3) [4085a57d]
501. ajax: jQuery.ajax() - script, Remote with scheme-less URL (2, 0, 2) [40650873]
502. ajax: jQuery.ajax() - malformed JSON (2) [4743732b]
503. ajax: jQuery.ajax() - script, throws exception (#11743) (3, 0, 3) [1e3c55d5]
504. ajax: jQuery.ajax() - script by content-type (2, 0, 2) [37339ee0]
505. ajax: jQuery.ajax() - json by content-type (3, 0, 3) [328d887d]
506. ajax: jQuery.ajax() - json by content-type disabled with options (2, 0, 2) [185edd05]
507. ajax: jQuery.getJSON(String, Hash, Function) - JSON array (2, 0, 2) [76432ca8]
508. ajax: jQuery.getJSON(String, Function) - JSON object (2, 0, 2) [8d27e9f2]
509. ajax: jQuery.getJSON - Using Native JSON (2, 0, 2) [b57949ec]
510. ajax: jQuery.getJSON(String, Function) - JSON object with absolute url to local content (2, 0, 2) [d628cc8d]
511. ajax: jQuery.post - data (1, 0, 1) [78ce1ec9]
512. ajax: jQuery.post(String, Hash, Function) - simple with xml (2, 0, 2) [9eee808e]
513. ajax: jQuery.ajaxSetup({timeout: Number}) - with global timeout (2, 0, 2) [f8cb034b]
514. ajax: jQuery.ajaxSetup({timeout: Number}) with localtimeout (2, 0, 2) [755143f0]
515. ajax: jQuery.ajax - simple get (1, 0, 1) [b0f19647]
516. ajax: jQuery.ajax - simple post (1, 0, 1) [6d456fcf]
517. ajax: ajaxSetup() (1, 0, 1) [31256e82]
518. ajax: data option: evaluate function values (#2806) (2, 0, 2) [c154fe1a]
519. ajax: data option: empty bodies for non-GET requests (2, 0, 2) [9e7ca9fd]
520. ajax: jQuery.ajax - If-Modified-Since support (cache) (3, 0, 3) [21867025]
521. ajax: jQuery.ajax - Etag support (cache) (2, 0, 2) [14b07672]
522. ajax: jQuery.ajax - If-Modified-Since support (no cache) (3, 0, 3) [880f7028]
523. ajax: jQuery.ajax - Etag support (no cache) (2, 0, 2) [cf82aabb]
524. ajax: jQuery ajax - failing cross-domain (2) [8a1d31fa]
525. ajax: jQuery ajax - atom+xml (2, 0, 2) [17ae80ca]
526. ajax: jQuery.ajax - Location object as url (#7531) (1) [07284f08]
527. ajax: jQuery.ajax - Context with circular references (#9887) (2) [3650b92f]
528. ajax: jQuery.ajax - statusText (2, 0, 2) [1525b29e]
529. ajax: jQuery.ajax - statusCode (9, 11, 20) [151e1b5e]
530. ajax: jQuery.ajax - transitive conversions (2, 0, 2) [526c4481]
531. ajax: jQuery.ajax - overrideMimeType (1, 0, 1) [dc24d099]
532. ajax: jQuery.ajax - abort in prefilter (1) [8db77cef]
533. ajax: jQuery.ajax - loading binary data shouldn't throw an exception in IE (#11426) (3, 0, 3) [c53e272d]
534. ajax: jQuery.domManip - no side effect because of ajaxSetup or global events (#11264) (1, 0, 1) [f4e1aaae]
535. ajax: jQuery.domManip - script in comments are properly evaluated (#11402) (2) [5f2d7614]
536. ajax: jQuery.ajax - active counter (2, 0, 2) [89a735c1]
537. effects: sanity check (1, 0, 1) [efdae790]
538. effects: show() (26) [d8a15098]
539. effects: show(Number) - other displays (2, 0, 2) [3cc75445]
540. effects: Persist correct display value (1, 2, 3) [cfd734d7]
541. effects: animate(Hash, Object, Function) (1) [cf19d4bb]
542. effects: animate negative height (1) [94637799]
543. effects: animate negative margin (1) [9cb76c20]
544. effects: animate negative margin with px (1) [aa03bfa2]
545. effects: animate negative padding (1) [982223df]
546. effects: animate block as inline width/height (3) [fa0a9ef5]
547. effects: animate native inline width/height (3) [563ce3a7]
548. effects: animate block width/height (3) [5c02ecbc]
549. effects: animate table width/height (1) [2014071b]
550. effects: animate table-row width/height (3) [b9cdf82e]
551. effects: animate table-cell width/height (3) [7ac0fc76]
552. effects: animate percentage(%) on width/height (2) [3ca3cfea]
553. effects: animate resets overflow-x and overflow-y when finished (2) [2ea5bb3f]
554. effects: animate option { queue: false } (2) [228dc8a0]
555. effects: animate option { queue: true } (2) [012e6a8b]
556. effects: animate option { queue: 'name' } (5) [3b587672]
557. effects: animate with no properties (2) [0c707191]
558. effects: animate duration 0 (1, 10, 11) [de89c01d]
559. effects: animate hyphenated properties (1) [e0741176]
560. effects: animate non-element (1) [8a2a7ba3]
561. effects: stop() (4) [d94a505d]
562. effects: stop() - several in queue (3) [900f6230]
563. effects: stop(clearQueue) (4) [99389d19]
564. effects: stop(clearQueue, gotoEnd) (1) [185a6135]
565. effects: stop( queue, ..., ... ) - Stop single queues (3) [91a9f589]
566. effects: toggle() (6) [0153e8af]
567. effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (7) [1185dbde]
568. effects: JS Overflow and Display (2) [f00ad238]
569. effects: CSS Overflow and Display (2) [95249fd2]
570. effects: CSS Auto to 0 (6) [cd18cc65]
571. effects: CSS Auto to 50 (6) [d600c106]
572. effects: CSS Auto to 100 (6) [ea1750e6]
573. effects: CSS Auto to show (1, 4, 5) [58f1a6a8]
574. effects: CSS Auto to hide (4) [58eca8ed]
575. effects: JS Auto to 0 (6) [d95a1dbf]
576. effects: JS Auto to 50 (6) [51e99aec]
577. effects: JS Auto to 100 (6) [eb49b3c0]
578. effects: JS Auto to show (1, 4, 5) [7e0b9f0e]
579. effects: JS Auto to hide (4) [7e06a153]
580. effects: CSS 100 to 0 (6) [20d4da91]
581. effects: CSS 100 to 50 (6) [f9c6785a]
582. effects: CSS 100 to 100 (6) [3f088412]
583. effects: CSS 100 to show (1, 4, 5) [a226d8fc]
584. effects: CSS 100 to hide (4) [a221db41]
585. effects: JS 100 to 0 (6) [94d6f5f7]
586. effects: JS 100 to 50 (6) [0607c9b4]
587. effects: JS 100 to 100 (6) [baf15df8]
588. effects: JS 100 to show (1, 4, 5) [a3593bd6]
589. effects: JS 100 to hide (4) [a3543e1b]
590. effects: CSS 50 to 0 (6) [2ec35d59]
591. effects: CSS 50 to 50 (6) [a9a84e92]
592. effects: CSS 50 to 100 (6) [8b6174da]
593. effects: CSS 50 to show (1, 4, 5) [e0ec0134]
594. effects: CSS 50 to hide (4) [e0e70379]
595. effects: JS 50 to 0 (6) [21fd3d33]
596. effects: JS 50 to 50 (6) [1daa69f8]
597. effects: JS 50 to 100 (6) [97a2c634]
598. effects: JS 50 to show (1, 4, 5) [5cd4db1a]
599. effects: JS 50 to hide (4) [5ccfdd5f]
600. effects: CSS 0 to 0 (6) [cef43972]
601. effects: CSS 0 to 50 (6) [0f92f599]
602. effects: CSS 0 to 100 (6) [e2cbaeb3]
603. effects: CSS 0 to show (1, 4, 5) [76c9027b]
604. effects: CSS 0 to hide (4) [76c404c0]
605. effects: JS 0 to 0 (6) [6b71f658]
606. effects: JS 0 to 50 (6) [02ccd573]
607. effects: JS 0 to 100 (6) [56cdca19]
608. effects: JS 0 to show (1, 4, 5) [830a53d5]
609. effects: JS 0 to hide (4) [8305561a]
610. effects: Chain fadeOut fadeIn (5) [29e31f28]
611. effects: Chain fadeIn fadeOut (5) [baff1c8c]
612. effects: Chain hide show (5) [4acc55c2]
613. effects: Chain show hide (5) [a672b72c]
614. effects: Chain show hide with easing and callback (5) [66baa95d]
615. effects: Chain toggle in (5) [538c8818]
616. effects: Chain toggle out (5) [1e0492bb]
617. effects: Chain toggle out with easing and callback (5) [d6ca9cae]
618. effects: Chain slideDown slideUp (5) [aa9d06a6]
619. effects: Chain slideUp slideDown (5) [5a9beaa6]
620. effects: Chain slideUp slideDown with easing and callback (5) [afd27323]
621. effects: Chain slideToggle in (5) [fb9c7479]
622. effects: Chain slideToggle out (5) [77f2327a]
623. effects: Chain fadeToggle in (5) [de1cb17c]
624. effects: Chain fadeToggle out (5) [e57995d7]
625. effects: Chain fadeTo 0.5 1.0 with easing and callback) (5) [00756e7a]
626. effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (4) [64f5d5da]
627. effects: slideToggle().stop().slideToggle() (8) [48ba4f9d]
628. effects: fadeToggle().stop().fadeToggle() (8) [e37c1959]
629. effects: toggle().stop().toggle() (8) [d6b90521]
630. effects: animate with per-property easing (5) [31782e85]
631. effects: animate with CSS shorthand properties (11) [6cdfbda6]
632. effects: hide hidden elements, with animation (bug #7141) (7, 2, 9) [f7e757ea]
633. effects: animate unit-less properties (#4966) (9, 1, 10) [8ba15e93]
634. effects: animate properties missing px w/ opacity as last (#9074) (7, 2, 9) [4de2c7cb]
635. effects: callbacks should fire in correct order (#9100) (13, 0, 13) [ee12de1c]
636. effects: callbacks that throw exceptions will be removed (#5684) (15, 0, 15) [b234370d]
637. effects: animate will scale margin properties individually (17, 1, 18) [eb5df1cc]
638. effects: Do not append px to 'fill-opacity' #9548 (1) [de39926d]
639. effects: jQuery.Animation( object, props, opts ) (21, 0, 21) [06a080f4]
640. effects: Animate Option: step: function( percent, tween ) (13, 0, 13) [d9eb74b1]
641. effects: Animate callbacks have correct context (25, 0, 25) [48f58a6c]
642. effects: User supplied callback called after show when fx off (#8892) (2) [fab3ee0c]
643. effects: animate should set display for disconnected nodes (7, 1, 8) [1cea88d3]
644. effects: Animation callback should not show animated element as animated (#7157) (5, 0, 5) [1cc8d050]
645. effects: hide called on element within hidden parent should set display to none (#10045) (7, 0, 7) [89eb04cf]
646. effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (8, 0, 8) [eda025cc]
647. effects: Handle queue:false promises (2, 0, 2) [4a1e01dc]
648. effects: multiple unqueued and promise (4, 0, 4) [7b25a5f4]
649. effects: animate does not change start value for non-px animation (#7109) (5, 0, 5) [aad22350]
650. effects: non-px animation handles non-numeric start (#11971) (6, 0, 6) [42f0f191]
651. effects: Animation callbacks (#11797) (15, 5, 20) [5f8a45b7]
652. effects: Animate properly sets overflow hidden when animating width/height (#12117) (3, 0, 3) [843718d3]
653. effects: Animations with 0 duration don't ease (#12273) (1) [015c4700]
654. offset: empty set (2) [a2eac746]
655. offset: object without getBoundingClientRect (2, 0, 2) [a44dc5f9]
656. offset: disconnected node (2) [f048ddfe]
657. offset: offset/absolute (2, 0, 2) [4e04a26a]
658. offset: offset/absolute (2, 0, 2) [728faaf6]
659. offset: offset/relative (2, 0, 2) [c5f78fbf]
660. offset: offset/static (2, 0, 2) [f7880421]
661. offset: offset/fixed (2, 0, 2) [bcedaf61]
662. offset: offset/table (2, 0, 2) [bdaf03bb]
663. offset: offset/scroll (2, 0, 2) [f6a01c80]
664. offset: offset/body (2, 0, 2) [ed504015]
665. offset: chaining (3, 0, 3) [6d9ef26a]
666. offset: offsetParent (5, 7, 12) [f4faf786]
667. offset: fractions (see #7730 and #7885) (1, 1, 2) [373463ce]
668. dimensions: width() (9) [855ae478]
669. dimensions: width(Function) (9) [ae664c80]
670. dimensions: width(Function(args)) (2) [0db1c3fc]
671. dimensions: height() (9) [44094357]
672. dimensions: height(Function) (9) [27735c5f]
673. dimensions: height(Function(args)) (2) [5b05309b]
674. dimensions: innerWidth() (6) [3033c180]
675. dimensions: innerHeight() (1, 5, 6) [f44c074f]
676. dimensions: outerWidth() (2, 9, 11) [2a572bbb]
677. dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (16) [f05103b6]
678. dimensions: getting dimensions shouldnt modify runtimeStyle see #9233 (1) [e94342ef]
679. dimensions: table dimensions (2) [5a628b4e]
680. dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (16) [16694f32]
681. dimensions: outerHeight() (2, 9, 11) [3e95e474]
682. dimensions: passing undefined is a setter #5571 (4) [bdb02bc3]
683. dimensions: getters on non elements should return null (8, 0, 8) [e0ba59c6]
684. dimensions: setters with and without box-sizing:border-box (20) [6d13f464]
685. dimensions: dimensions/documentSmall (2, 0, 2) [e1ec02d9]
686. dimensions: dimensions/documentLarge (2, 0, 2) [e184290d]
687. animation: Animation( subject, props, opts ) - shape (3, 0, 3) [b1e3617f]
688. animation: Animation.prefilter( fn ) - calls prefilter after defaultPrefilter (1) [2a50ba1f]
689. animation: Animation.prefilter( fn, true ) - calls prefilter before defaultPrefilter (1) [c55d16bc]
690. animation: Animation.prefilter - prefilter return hooks (34) [2b51eabf]
691. animation: Animation.tweener( fn ) - unshifts a * tweener (2) [803364a1]
692. animation: Animation.tweener( 'prop', fn ) - unshifts a 'prop' tweener (4) [12355747]
693. animation: Animation.tweener( 'list of props', fn ) - unshifts a tweener to each prop (2) [590e4dc3]
694. tween: jQuery.Tween - Default propHooks on plain objects (8) [09121f56]
695. tween: jQuery.Tween - Default propHooks on elements (19) [03fab35f]
696. tween: jQuery.Tween - Plain Object (13) [064e21dc]
697. tween: jQuery.Tween - Element (2, 8, 10) [1a509f35]
698. tween: jQuery.Tween - No duration (3) [05bfc4cc]
699. tween: jQuery.Tween - step function option (4) [5caad4b0]
700. tween: jQuery.Tween - custom propHooks (3) [8af203e5]
701. tween: jQuery.Tween - custom propHooks - advanced values (5) [701d4d72]
