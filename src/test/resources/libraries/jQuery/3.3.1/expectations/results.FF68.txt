1. ready: jQuery.isReady (2) [fc73fe42]
2. ready: jQuery ready (10) [b6c34eda]
3. ready: jQuery.when(jQuery.ready) (2) [2abf4f9f]
4. ready: Promise.resolve(jQuery.ready) (2) [cdc6ad2e]
5. ready: Error in ready callback does not halt all future executions (gh-1823) (1) [4d1242b7]
6. ready: holdReady test needs to be a standalone test since it deals with DOM ready (2) [216c3c4d]
7. basic: ajax (4) [b948dcce]
8. basic: attributes (6) [0b3d9985]
9. basic: css (1) [9a9f4995]
10. basic: show/hide (2) [201dfb26]
11. basic: core (18) [b949da4d]
12. basic: data (4) [b94a1a58]
13. basic: dimensions (3) [0bc22ffb]
14. basic: event (1) [70109dac]
15. basic: manipulation (5) [4555384b]
16. basic: offset (3) [a2329bc1]
17. basic: selector (2) [5410178d]
18. basic: serialize (2) [720bb8f2]
19. basic: traversing (12) [1c17bddd]
20. basic: wrap (3) [b952faf8]
21. core: Unit Testing Environment (2) [2e3f04a4]
22. core: Basic requirements (7) [b8dae67f]
23. core: jQuery() (2, 4, 6) [0680cf5c]
24. core: jQuery(selector, context) (3) [196dd81a]
25. core: selector state (17, 1, 18) [8d8d06ad]
26. core: globalEval (3) [0440d2fc]
27. core: noConflict (7) [59f980d0]
28. core: trim (13) [9dba41ff]
29. core: type (28) [9dba5d17]
30. core: isPlainObject (16) [887480e2]
31. core: isFunction (19) [5a7e4f3f]
32. core: isNumeric (1, 37, 38) [0d28b6c6]
33. core: isXMLDoc - HTML (4) [e01cfc16]
34. core: XSS via location.hash (1) [78959170]
35. core: isXMLDoc - XML (3) [59cf9e2c]
36. core: isWindow (14) [72386517]
37. core: jQuery('html') (18) [a16831a7]
38. core: jQuery('massive html #7990') (3) [9798de1f]
39. core: jQuery('html', context) (1) [21c16e10]
40. core: jQuery(selector, xml).text(str) - loaded via xml document (2) [fafab1b5]
41. core: end() (3) [18b8b0df]
42. core: length (1) [09d60583]
43. core: get() (1) [18d1049a]
44. core: toArray() (1) [1809f262]
45. core: inArray() (19) [51380078]
46. core: get(Number) (2) [56995191]
47. core: get(-Number) (2) [17b75382]
48. core: each(Function) (1) [0fa24667]
49. core: slice() (7) [aedfaf16]
50. core: first()/last() (4) [976fc3d2]
51. core: map() (2) [1923b120]
52. core: jQuery.map (25) [698e2e09]
53. core: jQuery.merge() (10) [8265e566]
54. core: jQuery.grep() (8) [8f4e4e8a]
55. core: jQuery.extend(Object, Object) (28) [bbeda45c]
56. core: jQuery.each(Object,Function) (23) [5889c4d8]
57. core: JIT compilation does not interfere with length retrieval (gh-2145) (4) [35566d78]
58. core: jQuery.makeArray (15) [696f93f8]
59. core: jQuery.inArray (3) [bb7b4e61]
60. core: jQuery.isEmptyObject (2) [f2b417cf]
61. core: jQuery.proxy (9) [3eecdbdb]
62. core: jQuery.parseHTML (3, 14, 17) [b2541bcb]
63. core: jQuery.parseJSON (20) [b2550108]
64. core: jQuery.parseXML (8) [2f0b33d7]
65. core: jQuery.camelCase() (1, 6, 7) [b504e034]
66. core: global failure (2, 0, 2) [2f805baa]
67. callbacks: jQuery.Callbacks( '' ) - no filter (21) [7e717211]
68. callbacks: jQuery.Callbacks( { } ) - no filter (21) [379676d3]
69. callbacks: jQuery.Callbacks( '' ) - filter (21) [e676825e]
70. callbacks: jQuery.Callbacks( { } ) - filter (21) [e55384dc]
71. callbacks: jQuery.Callbacks( 'once' ) - no filter (21) [b69b7af0]
72. callbacks: jQuery.Callbacks( { 'once': true } ) - no filter (21) [2c977bc6]
73. callbacks: jQuery.Callbacks( 'once' ) - filter (21) [9a493ddf]
74. callbacks: jQuery.Callbacks( { 'once': true } ) - filter (21) [5ceadcc9]
75. callbacks: jQuery.Callbacks( 'memory' ) - no filter (21) [18655130]
76. callbacks: jQuery.Callbacks( { 'memory': true } ) - no filter (21) [aff804c6]
77. callbacks: jQuery.Callbacks( 'memory' ) - filter (21) [15790f9f]
78. callbacks: jQuery.Callbacks( { 'memory': true } ) - filter (21) [6b7ef3c9]
79. callbacks: jQuery.Callbacks( 'unique' ) - no filter (21) [46f00860]
80. callbacks: jQuery.Callbacks( { 'unique': true } ) - no filter (21) [6cb08bf6]
81. callbacks: jQuery.Callbacks( 'unique' ) - filter (21) [40cd266f]
82. callbacks: jQuery.Callbacks( { 'unique': true } ) - filter (21) [5bf73a99]
83. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - no filter (21) [a8ca7f15]
84. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - no filter (21) [afdb5241]
85. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - filter (21) [64ac33da]
86. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - filter (21) [d264102e]
87. callbacks: jQuery.Callbacks( 'once memory' ) - no filter (21) [15ef8bf7]
88. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - no filter (21) [ff40c7ed]
89. callbacks: jQuery.Callbacks( 'once memory' ) - filter (21) [28232238]
90. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - filter (21) [644e5a02]
91. callbacks: jQuery.Callbacks( 'once unique' ) - no filter (21) [447a4327]
92. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - no filter (21) [bbf94f1d]
93. callbacks: jQuery.Callbacks( 'once unique' ) - filter (21) [53773908]
94. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - filter (21) [54c6a0d2]
95. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - no filter (21) [de28e8ae]
96. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - no filter (21) [b1216f7a]
97. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - filter (21) [2892d8e1]
98. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - filter (21) [7288a595]
99. callbacks: jQuery.Callbacks( 'memory unique' ) - no filter (21) [325ee4e7]
100. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - no filter (21) [6727d81d]
101. callbacks: jQuery.Callbacks( 'memory unique' ) - filter (21) [73ebef48]
102. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - filter (21) [fe4cb7d2]
103. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - no filter (21) [02a35eee]
104. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - no filter (21) [9aa0867a]
105. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - filter (21) [2fd60aa1]
106. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - filter (21) [0c38ee95]
107. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - no filter (21) [1464ce1e]
108. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - no filter (21) [3f655d4a]
109. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - filter (21) [0a2e6971]
110. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - filter (21) [747009c5]
111. callbacks: jQuery.Callbacks( options ) - options are copied (1) [923a6442]
112. callbacks: jQuery.Callbacks.fireWith - arguments are copied (1) [78b2320f]
113. callbacks: jQuery.Callbacks.remove - should remove all instances (1) [cb02f2c3]
114. callbacks: jQuery.Callbacks.has (13) [6fd17bf8]
115. callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (1) [5258dfa5]
116. deferred: jQuery.Deferred (3, 1, 4) [09ee1fb2]
117. deferred: jQuery.Deferred - new operator (3, 1, 4) [62d20265]
118. deferred: jQuery.Deferred - chainability (10) [8f1ac28a]
119. deferred: jQuery.Deferred.then - filtering (done) (2, 2, 4) [d0d4d16f]
120. deferred: jQuery.Deferred.then - filtering (fail) (2, 2, 4) [d0ea9153]
121. deferred: jQuery.Deferred.then - filtering (progress) (1, 2, 3) [357d8424]
122. deferred: jQuery.Deferred.then - deferred (done) (1, 2, 3) [877e85a6]
123. deferred: jQuery.Deferred.then - deferred (fail) (1, 2, 3) [8794458a]
124. deferred: jQuery.Deferred.then - deferred (progress) (1, 2, 3) [5b3444db]
125. deferred: jQuery.Deferred.then - context (1, 0, 1) [d230e435]
126. deferred: jQuery.when (37) [6b29306d]
127. deferred: jQuery.when - joined (13, 35, 48) [fe8b6cef]
128. deprecated: bind/unbind (4) [7e81b3ff]
129. deprecated: delegate/undelegate (2) [5f1b027f]
130. deprecated: hover() mouseenter mouseleave (1) [fd2a1553]
131. deprecated: trigger() shortcuts (5) [e295cadd]
132. deprecated: Event aliases (18) [6cee512f]
133. deprecated: jQuery.parseJSON (20) [6097b574]
134. deprecated: jQuery.isArray (1) [fe0068e8]
135. deprecated: jQuery.nodeName (8) [30cbb534]
136. deprecated: type (28) [fe775383]
137. deprecated: type for `Symbol` (2) [a918d83c]
138. deprecated: isFunction (20) [cc4bc4ab]
139. deprecated: isFunction(cross-realm function) (7, 6, 13) [46f5c2b6]
140. deprecated: isFunction(GeneratorFunction) (1) [353ef97b]
141. deprecated: isFunction(AsyncFunction) (1) [1bcb8672]
142. deprecated: isFunction(custom @@toStringTag) (2) [ee44842d]
143. deprecated: jQuery.isWindow (14) [e716b741]
144. deprecated: jQuery.camelCase() (7) [dd6c29a0]
145. deprecated: jQuery.now (1) [db5ba8ef]
146. deprecated: jQuery.proxy (9) [7332a647]
147. deprecated: isNumeric (43) [4260e3da]
148. deprecated: isNumeric(Symbol) (2) [09914223]
149. support: zoom of doom (#13089) (1) [04c165a3]
150. support: global failure (2, 0, 2) [5f7c257a]
151. data: expando (1) [59d58323]
152. data: jQuery.data(div) (2, 25, 27) [f1b20eb8]
153. data: jQuery.data({}) (25) [419abc07]
154. data: jQuery.data(window) (25) [4c810139]
155. data: jQuery.data(document) (2, 25, 27) [7572f16e]
156. data: Expando cleanup (2, 2, 4) [f2c75a87]
157. data: Data is not being set on comment and text nodes (2) [2e27dfab]
158. data: jQuery.acceptData (2, 0, 2) [f98e92d0]
159. data: jQuery().data() === undefined (#14101) (2) [bc9e4320]
160. data: .data() (5) [d972e5e7]
161. data: jQuery(Element).data(String, Object).data(String) (18) [45a0b398]
162. data: jQuery(plain Object).data(String, Object).data(String) (16) [eaf0a56f]
163. data: data-* attributes (1, 42, 43) [e11170de]
164. data: .data(Object) (4) [b21f7be8]
165. data: jQuery.removeData (10) [842bb84c]
166. data: .removeData() (6) [dde09a8b]
167. data: JSON serialization (#8108) (1) [c57d2337]
168. data: jQuery.data should follow html5 specification regarding camel casing (10) [d89a4121]
169. data: jQuery.data should not miss data with preset hyphenated property names (2) [d088f21e]
170. data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24) [ee44b820]
171. data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (27) [505ec023]
172. data: .removeData supports removal of hyphenated properties via array (#12786) (2, 2, 4) [34c1ffc9]
173. data: Triggering the removeData should not throw exceptions. (#10080) (1) [8a66db26]
174. data: Only check element attributes once when calling .data() - #8909 (2) [f7fc1685]
175. data: JSON data- attributes can have newlines (1) [0c916fc1]
176. data: global failure (2, 0, 2) [583ca43f]
177. queue: queue() with other types (14) [cfea7bc8]
178. queue: queue(name) passes in the next item in the queue as a parameter (2) [a0b7b5e8]
179. queue: queue() passes in the next item in the queue as a parameter to fx queues (3) [b635b198]
180. queue: callbacks keep their place in the queue (5) [b44ac744]
181. queue: delay() (2) [67daca39]
182. queue: clearQueue(name) clears the queue (2) [cbec94c3]
183. queue: clearQueue() clears the fx queue (1) [43a0847c]
184. queue: fn.promise() - called when fx queue is empty (3) [3d95283f]
185. queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (5) [bd53cbc7]
186. queue: fn.promise( "queue" ) - waits for animation to complete before resolving (2) [8c35be6e]
187. queue: .promise(obj) (2) [5302fde2]
188. queue: delay() can be stopped (3) [6927c207]
189. queue: queue stop hooks (2) [a3692fac]
190. attributes: jQuery.propFix integrity test (1, 0, 1) [6ba2179e]
191. attributes: attr(String) (50) [e3b0c806]
192. attributes: attr(String) on cloned elements, #9646 (4) [d30b9b85]
193. attributes: attr(String) in XML Files (3) [cbf8a58d]
194. attributes: attr(String, Function) (2) [e7a05bda]
195. attributes: attr(Hash) (3) [ce0ca229]
196. attributes: attr(String, Object) (71) [dd42a793]
197. attributes: attr - extending the boolean attrHandle (1) [951743f5]
198. attributes: attr(String, Object) - Loaded via XML document (2) [39a11351]
199. attributes: attr(String, Object) - Loaded via XML fragment (2) [a3e72486]
200. attributes: attr('tabindex') (8) [4e40e254]
201. attributes: attr('tabindex', value) (9) [ac9022c1]
202. attributes: removeAttr(String) (1, 11, 12) [88bb7eea]
203. attributes: removeAttr(String) in XML (7) [5ce00072]
204. attributes: removeAttr(Multi String, variable space width) (8) [0c02eb67]
205. attributes: prop(String, Object) (17) [5c3c4d05]
206. attributes: prop(String, Object) on null/undefined (14) [f72c08ce]
207. attributes: prop('tabindex') (11) [8bbb10c6]
208. attributes: prop('tabindex', value) (10) [ea2c300f]
209. attributes: removeProp(String) (6) [e462b65c]
210. attributes: val() after modification (1) [6376b503]
211. attributes: val() (26) [b03d455d]
212. attributes: val() with non-matching values on dropdown list (2, 1, 3) [e1a731fe]
213. attributes: val() respects numbers without exception (Bug #9319) (4) [114aac89]
214. attributes: val(String/Number) (9) [6de1bd4e]
215. attributes: val(Function) (9) [221ff865]
216. attributes: val(Array of Numbers) (Bug #7123) (4) [c6dd91b4]
217. attributes: val(Function) with incoming value (10) [41db3b56]
218. attributes: val(select) after form.reset() (Bug #2551) (3) [4e5c2644]
219. attributes: addClass(String) (9) [fe5d0aec]
220. attributes: addClass(Function) (9) [de2e1305]
221. attributes: addClass(Function) with incoming value (52) [d371c5f6]
222. attributes: removeClass(String) - simple (8) [926c1586]
223. attributes: removeClass(Function) - simple (8) [b788da4d]
224. attributes: removeClass(Function) with incoming value (52) [6f69a149]
225. attributes: removeClass() removes duplicates (1) [2f658969]
226. attributes: removeClass(undefined) is a no-op (1) [9a4915c6]
227. attributes: toggleClass(String|boolean|undefined[, boolean]) (2, 17, 19) [2b9e011f]
228. attributes: toggleClass(Function[, boolean]) (2, 17, 19) [0c5ee926]
229. attributes: toggleClass(Function[, boolean]) with incoming value (14) [86934197]
230. attributes: addClass, removeClass, hasClass (17) [a56f0856]
231. attributes: addClass, removeClass, hasClass on many elements (19) [cb2313a1]
232. attributes: contents().hasClass() returns correct values (2) [c32ecd68]
233. attributes: hasClass correctly interprets non-space separators (#13835) (4) [3dc381d0]
234. attributes: coords returns correct values in IE6/IE7, see #10828 (1) [7e4920d6]
235. attributes: should not throw at $(option).val() (#14686) (1) [822ce1ad]
236. attributes: Insignificant white space returned for $(option).val() (#14858) (3) [518874e8]
237. event: null or undefined handler (2) [4f7c55f4]
238. event: on() with non-null,defined data (2) [a75c7c8a]
239. event: Handler changes and .trigger() order (1) [92be6c97]
240. event: on(), with data (4) [67870fae]
241. event: click(), with data (3) [1bb483e9]
242. event: on(), with data, trigger with data (4) [e110c4fa]
243. event: on(), multiple events at once (2) [73ce31c1]
244. event: on(), five events at once (1) [83218ddf]
245. event: on(), multiple events at once and namespaces (7) [a567b4a0]
246. event: on(), namespace with special add (27) [5357ecdb]
247. event: on(), no data (1) [f9acca13]
248. event: on/one/off(Object) (6) [97deefda]
249. event: on/off(Object), on/off(Object, String) (6) [25945833]
250. event: on immediate propagation (2) [03abeb1e]
251. event: on bubbling, isDefaultPrevented, stopImmediatePropagation (3) [cc6b914d]
252. event: on(), iframes (1) [e65459b9]
253. event: on(), trigger change on select (5) [1452ed2b]
254. event: on(), namespaced events, cloned events (18) [83c2eae4]
255. event: on(), multi-namespaced events (6) [dd022686]
256. event: namespace-only event binding is a no-op (2) [dddfcdb9]
257. event: on(), with same function (2) [0b544ace]
258. event: on(), make sure order is maintained (1) [0f22ec1f]
259. event: on(), with different this object (4) [13398616]
260. event: on(name, false), off(name, false) (3) [d4d7a3fe]
261. event: on(name, selector, false), off(name, selector, false) (3) [b1e4caa4]
262. event: on()/trigger()/off() on plain object (7) [2be9b583]
263. event: off(type) (1) [3378a8b4]
264. event: off(eventObject) (4) [39bba8ab]
265. event: hover() mouseenter mouseleave (1) [002bd3fa]
266. event: mouseover triggers mouseenter (1) [1ad46faf]
267. event: pointerover triggers pointerenter (1) [fc52722f]
268. event: withinElement implemented with jQuery.contains() (1) [976ee805]
269. event: mouseenter, mouseleave don't catch exceptions (2) [7700a8fe]
270. event: trigger() shortcuts (1, 5, 6) [962f5e44]
271. event: trigger() bubbling (18) [2b1e2612]
272. event: trigger(type, [data], [fn]) (16) [5bfbb1c3]
273. event: submit event bubbles on copied forms (#11649) (3) [8e85e03a]
274. event: change event bubbles on copied forms (#11796) (3) [ec9b3869]
275. event: trigger(eventObject, [data], [fn]) (28) [f8fcfbc8]
276. event: .trigger() bubbling on disconnected elements (#10489) (2) [57fcf00f]
277. event: .trigger() doesn't bubble load event (#10717) (1) [5b3fa683]
278. event: Delegated events in SVG (#10791; #13180) (2) [c841373e]
279. event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (5) [7304f0a8]
280. event: Submit event can be stopped (#11049) (1) [85069023]
281. event: on(beforeunload) (4) [c4ca9de4]
282. event: jQuery.Event( type, props ) (5) [9ee7af47]
283. event: jQuery.Event properties (12) [4862ed07]
284. event: .on()/.off() (65) [86f809e5]
285. event: jQuery.off using dispatched jQuery.Event (1) [a6cd39f6]
286. event: delegated event with delegateTarget-relative selector (3) [72cc648d]
287. event: delegated event with selector matching Object.prototype property (#13203) (1) [02402d82]
288. event: delegated event with intermediate DOM manipulation (#13208) (1) [99091f7b]
289. event: stopPropagation() stops directly-bound events on delegated target (1) [97a76f1f]
290. event: off all bound delegated events (2) [fbfed32e]
291. event: on with multiple delegated events (1) [e8bc1bef]
292. event: delegated on with change (8) [825bc50c]
293. event: delegated on with submit (2) [9e60f174]
294. event: delegated off() with only namespaces (2) [478bcc85]
295. event: Non DOM element events (1) [c54cd510]
296. event: inline handler returning false stops default (1) [f2abf84c]
297. event: window resize (2) [50fdc562]
298. event: focusin bubbles (2) [e1fefb42]
299. event: custom events with colons (#3533, #8272) (1) [8e42386e]
300. event: .on and .off (9) [fa721d1f]
301. event: special on name mapping (7) [3334c871]
302. event: .on and .off, selective mixed removal (#10705) (7) [7bd80ad7]
303. event: .on( event-map, null-selector, data ) #11130 (1) [1f7323b9]
304. event: clone() delegated events (#11076) (3) [3233ef57]
305. event: checkbox state (#3827) (9) [40ec06fa]
306. event: hover event no longer special since 1.9 (1) [0541090b]
307. event: fixHooks extensions (2, 0, 2) [7bcb00b7]
308. event: focusin using non-element targets (2) [5b20ac5d]
309. event: global failure (2, 0, 2) [1d30e34f]
310. selector: element - jQuery only (7) [9e9fea7a]
311. selector: id (2, 0, 2) [0db701f8]
312. selector: class - jQuery only (4) [fa5d90b6]
313. selector: name (2, 0, 2) [7c00ac28]
314. selector: selectors with comma (4) [83b7e1c4]
315. selector: child and adjacent (2, 0, 2) [484374cc]
316. selector: attributes (2, 0, 2) [48c47134]
317. selector: disconnected nodes (1) [610f9769]
318. selector: disconnected nodes - jQuery only (3) [50740424]
319. selector: selector/html5_selector (2, 0, 2) [c4e15a07]
320. selector: jQuery.contains (16) [c8b315d2]
321. selector: jQuery.unique (14) [68a67c44]
322. selector: selector/sizzle_cache (2, 0, 2) [7f192785]
323. selector: Iframe dispatch should not affect jQuery (#13936) (1) [958e0234]
324. traversing: find(String) (1) [44dc4676]
325. traversing: find(String) under non-elements (1, 1, 2) [8a165e29]
326. traversing: find(leading combinator) (4) [6c067eb1]
327. traversing: find(node|jQuery object) (1, 12, 13) [165911c0]
328. traversing: is(String|undefined) (23) [53d824d3]
329. traversing: is() against non-elements (#10178) (14) [32648f33]
330. traversing: is(jQuery) (1, 18, 19) [09b3677a]
331. traversing: is() with :has() selectors (6) [6b8baba7]
332. traversing: is() with positional selectors (27) [435ba0da]
333. traversing: index() (2) [2a27d866]
334. traversing: index(Object|String|undefined) (16) [c3ba094a]
335. traversing: filter(Selector|undefined) (9) [47ce3153]
336. traversing: filter(Function) (2) [33bf57ce]
337. traversing: filter(Element) (1) [5405ec90]
338. traversing: filter(Array) (1) [5296a193]
339. traversing: filter(jQuery) (1) [40f92948]
340. traversing: filter() with positional selectors (19) [9a4c6fa8]
341. traversing: closest() (13) [53163f6d]
342. traversing: closest() with positional selectors (1, 1, 2) [818a3e8f]
343. traversing: closest(jQuery) (8) [588031af]
344. traversing: not(Selector|undefined) (2, 9, 11) [cd9ff434]
345. traversing: not(Element) (1) [ce912c4f]
346. traversing: not(Function) (1) [0a9c0fef]
347. traversing: not(Array) (2) [961cc512]
348. traversing: not(jQuery) (1, 0, 1) [6e3775a9]
349. traversing: has(Element) (3) [879c1468]
350. traversing: has(Selector) (5) [1507abcf]
351. traversing: has(Arrayish) (4) [266a38e9]
352. traversing: addBack() (5) [51c2327c]
353. traversing: siblings([String]) (6) [9243394e]
354. traversing: siblings([String]) - jQuery only (2) [4b7ff149]
355. traversing: children([String]) (2) [7c54abdc]
356. traversing: children([String]) - jQuery only (1) [50d6d357]
357. traversing: parent([String]) (6) [a93e9c07]
358. traversing: parents([String]) (1, 5, 6) [29f562ac]
359. traversing: parentsUntil([String]) (3, 7, 10) [c1716bb2]
360. traversing: next([String]) (6) [2604c650]
361. traversing: prev([String]) (5) [9e01cd90]
362. traversing: nextAll([String]) (5) [29363911]
363. traversing: prevAll([String]) (5) [5764e9d1]
364. traversing: nextUntil([String]) (12) [fe62ae8e]
365. traversing: prevUntil([String]) (11) [5ba82f4e]
366. traversing: contents() (12) [993eada8]
367. traversing: sort direction (12) [b377110a]
368. traversing: add(String selector) (2) [17cf5c6f]
369. traversing: add(String selector, String context) (1) [46df2fbb]
370. traversing: add(String html) (3) [f23daca3]
371. traversing: add(jQuery) (4) [1b2b9577]
372. traversing: add(Element) (2) [c0210641]
373. traversing: add(Array elements) (1) [a613a4f7]
374. traversing: add(Window) (1) [56a65a25]
375. traversing: add(NodeList|undefined|HTMLFormElement|HTMLSelectElement) (4) [b1b47397]
376. traversing: add(String, Context) (6) [5c1fe653]
377. traversing: eq('-1') #10616 (3) [abea487b]
378. traversing: index(no arg) #10977 (2) [88c07b48]
379. traversing: traversing non-elements with attribute filters (#12523) (5) [fd8d0eed]
380. manipulation: text() (5) [79abb7cd]
381. manipulation: text(undefined) (1) [b76b69b5]
382. manipulation: text(String) (7) [b853a6bc]
383. manipulation: text(Function) (7) [f4ecfad5]
384. manipulation: text(Function) with incoming value (2) [60fea5c6]
385. manipulation: append(String|Element|Array<Element>|jQuery) (2, 49, 51) [d1fdf7d0]
386. manipulation: append(Function) (2, 49, 51) [72a7c4c2]
387. manipulation: append(param) to object, see #11280 (5) [65c5f097]
388. manipulation: append(Function) returns String (4) [750e10cc]
389. manipulation: append(Function) returns Element (2) [39c085a1]
390. manipulation: append(Function) returns Array<Element> (2) [29c710a0]
391. manipulation: append(Function) returns jQuery (2) [9a619f19]
392. manipulation: append(Function) returns Number (2) [6c918c04]
393. manipulation: XML DOM manipulation (#9960) (5) [5daa93d7]
394. manipulation: append the same fragment with events (Bug #6997, 5566) (2) [5aad1eac]
395. manipulation: append HTML5 sectioning elements (Bug #6485) (2) [2831131c]
396. manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (1) [6118970a]
397. manipulation: html(String) with HTML5 (Bug #6485) (2) [9dd21615]
398. manipulation: IE8 serialization bug (2) [7eedaf01]
399. manipulation: html() object element #10324 (1) [4c0b7603]
400. manipulation: append(xml) (1) [15c79ec1]
401. manipulation: appendTo(String) (4) [78206d44]
402. manipulation: appendTo(Element|Array<Element>) (2) [498a1bd0]
403. manipulation: appendTo(jQuery) (2, 2, 4) [fd3ea897]
404. manipulation: prepend(String) (2) [fefaf07f]
405. manipulation: prepend(Element) (1) [74e63b46]
406. manipulation: prepend(Array<Element>) (1) [ced9292b]
407. manipulation: prepend(jQuery) (1) [84192bd2]
408. manipulation: prepend(Array<jQuery>) (1) [d2e2c485]
409. manipulation: prepend(Function) with incoming value -- String (4) [a2fa629a]
410. manipulation: prepend(Function) with incoming value -- Element (2) [c95e6d93]
411. manipulation: prepend(Function) with incoming value -- Array<Element> (2) [a1e3b46e]
412. manipulation: prepend(Function) with incoming value -- jQuery (2) [c84df0e7]
413. manipulation: prependTo(String) (2) [3461885a]
414. manipulation: prependTo(Element) (1) [ec529ecb]
415. manipulation: prependTo(Array<Element>) (1) [7243b606]
416. manipulation: prependTo(jQuery) (1) [b97fc3ad]
417. manipulation: prependTo(Array<jQuery>) (1, 0, 1) [8dd5b04a]
418. manipulation: before(String) (1) [7bc7434e]
419. manipulation: before(Element) (1) [91a44257]
420. manipulation: before(Array<Element>) (1) [8e893cfa]
421. manipulation: before(jQuery) (1) [00e57ea1]
422. manipulation: before(Array<jQuery>) (1) [b8097ad6]
423. manipulation: before(Function) -- Returns String (1) [7c1eb755]
424. manipulation: before(Function) -- Returns Element (1) [14c4b038]
425. manipulation: before(Function) -- Returns Array<Element> (1) [d9711e29]
426. manipulation: before(Function) -- Returns jQuery (1) [a17245a2]
427. manipulation: before(Function) -- Returns Array<jQuery> (1) [a85fb759]
428. manipulation: before(no-op) (2) [be0e6066]
429. manipulation: before and after w/ empty object (#10812) (1) [e9f42ddf]
430. manipulation: .before() and .after() disconnected node (2) [bff98b50]
431. manipulation: insert with .before() on disconnected node last (1) [3197d82c]
432. manipulation: insert with .before() on disconnected node first (1) [01123fda]
433. manipulation: insert with .before() on disconnected node last (1) [01632d74]
434. manipulation: insert with .before() on disconnected node last (1) [2b02812c]
435. manipulation: insertBefore(String) (1) [2884f727]
436. manipulation: insertBefore(Element) (1) [7c9d099e]
437. manipulation: insertBefore(Array<Element>) (1) [b5e607d3]
438. manipulation: insertBefore(jQuery) (1) [ada3327a]
439. manipulation: .after(String) (1) [e8e4973d]
440. manipulation: .after(Element) (1) [c8316c48]
441. manipulation: .after(Array<Element>) (1) [2a8731e9]
442. manipulation: .after(jQuery) (1) [6e02d290]
443. manipulation: .after(Function) returns String (1) [d5b993f8]
444. manipulation: .after(Function) returns Element (1) [ee8567f5]
445. manipulation: .after(Function) returns Array<Element> (1) [3002a7cc]
446. manipulation: .after(Function) returns jQuery (1) [fb0d2245]
447. manipulation: .after(disconnected node) (2) [1de765fd]
448. manipulation: insertAfter(String) (1) [58a72614]
449. manipulation: insertAfter(Element) (1) [50c0b851]
450. manipulation: insertAfter(Array<Element>) (1) [3354f9c0]
451. manipulation: insertAfter(jQuery) (1) [ddc56167]
452. manipulation: replaceWith(String|Element|Array<Element>|jQuery) (29) [819c8672]
453. manipulation: replaceWith(Function) (30) [85c93a64]
454. manipulation: replaceWith(string) for more than one element (3) [691afae2]
455. manipulation: Empty replaceWith (#13401; #13596) (8) [5b1d9bf7]
456. manipulation: replaceAll(String) (2) [8a81309c]
457. manipulation: replaceAll(Element) (2) [5a27fec9]
458. manipulation: replaceAll(Array<Element>) (3) [5bdffc48]
459. manipulation: replaceAll(jQuery) (3) [0f9f6bef]
460. manipulation: jQuery.clone() (#8017) (2) [420b951d]
461. manipulation: append to multiple elements (#8070) (2) [1423a5a6]
462. manipulation: table manipulation (2) [cb6ffd0e]
463. manipulation: clone() (45) [43f2961f]
464. manipulation: clone(script type=non-javascript) (#11359) (3) [ba6bf709]
465. manipulation: clone(form element) (Bug #3879, #6655) (5) [5b5d57f1]
466. manipulation: clone(multiple selected options) (Bug #8129) (1) [b4779b24]
467. manipulation: clone() on XML nodes (2) [549e70a8]
468. manipulation: clone() on local XML nodes with html5 nodename (2) [14569a30]
469. manipulation: html(undefined) (1) [3ff2cc77]
470. manipulation: html() on empty set (1) [efc42543]
471. manipulation: html(String|Number) (39) [177371b3]
472. manipulation: html(Function) (39) [5c6d37d3]
473. manipulation: html( $.text() ) (1) [65e95643]
474. manipulation: html( fn ) returns $.text() (1) [ecc5d222]
475. manipulation: html(Function) with incoming value -- direct selection (4) [3bbe8a39]
476. manipulation: html(Function) with incoming value -- jQuery.contents() (14) [bf0a0767]
477. manipulation: clone()/html() don't expose jQuery/Sizzle expandos (#12858) (2) [9c138b84]
478. manipulation: remove() no filters (3) [3b3ef098]
479. manipulation: remove() with filters (8) [90ccaf9d]
480. manipulation: remove() event cleaning (1) [4ba995c5]
481. manipulation: remove() in document order #13779 (1) [9233c3ec]
482. manipulation: detach() no filters (3) [d4e901e9]
483. manipulation: detach() with filters (8) [6837b0ae]
484. manipulation: detach() event cleaning (1) [b8daaf14]
485. manipulation: empty() (6) [af85020f]
486. manipulation: jQuery.cleanData (14) [3cbc3042]
487. manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (1) [88c3811f]
488. manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (3) [2decd219]
489. manipulation: jQuery.buildFragment - plain objects are not a document #8950 (1) [8b8e8f7a]
490. manipulation: jQuery.clone - no exceptions for object elements #9587 (1) [0202079b]
491. manipulation: Cloned, detached HTML5 elems (#10667,10670) (7) [bc2d65ae]
492. manipulation: Guard against exceptions when clearing safeChildNodes (1) [a093336a]
493. manipulation: Ensure oldIE creates a new set on appendTo (#8894) (5) [bab3ba63]
494. manipulation: html() - script exceptions bubble (#11743) (5, 0, 5) [af5cc233]
495. manipulation: checked state is cloned with clone() (2) [0c51698e]
496. manipulation: manipulate mixed jQuery and text (#12384, #12346) (2) [4cb95a05]
497. manipulation: global failure (2, 0, 2) [827533ec]
498. wrap: wrap(String|Element) (19) [3ad4676c]
499. wrap: wrap(Function) (19) [14b24165]
500. wrap: wrap(Function) with index (#10177) (6) [e82d35bf]
501. wrap: wrap(String) consecutive elements (#10177) (12) [199d8111]
502. wrap: wrapAll(String) (5) [62f06b95]
503. wrap: wrapAll(Element) (3) [8fa022f0]
504. wrap: wrapInner(String) (6) [13d74a4a]
505. wrap: wrapInner(Element) (5) [fb951adb]
506. wrap: wrapInner(Function) returns String (6) [a98bbc8b]
507. wrap: wrapInner(Function) returns Element (5) [94f851c2]
508. wrap: unwrap() (9) [d4a4e9b6]
509. wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2) [df27d084]
510. wrap: wrapping scripts (#10470) (2) [52f4a540]
511. css: css(String|Hash) (2, 28, 30) [bd70ccae]
512. css: css() explicit and relative values (29) [55e67956]
513. css: css(String, Object) (20) [040f8367]
514. css: css(Array) (2) [b21d870e]
515. css: css(String, Object) for MSIE (3, 2, 5) [9bc97ad2]
516. css: Setting opacity to 1 properly removes filter: style (#6652) (1, 1, 2) [0cbec846]
517. css: css(String, Function) (3) [8ea592ae]
518. css: css(String, Function) with incoming value (3) [d52dd71f]
519. css: css(Object) where values are Functions (3) [90ac0dfe]
520. css: css(Object) where values are Functions with incoming values (3) [b8bbc3e4]
521. css: show(); hide() (4) [80fc46bf]
522. css: show(); (18) [c4053aa4]
523. css: show() resolves correct default display #8099 (2, 5, 7) [011c2478]
524. css: show() resolves correct default display for detached nodes (7, 6, 13) [6c7f821d]
525. css: show() resolves correct default display #10227 (4) [2205ab18]
526. css: show() resolves correct default display when iframe display:none #12904 (2) [ea7383d0]
527. css: toggle() (9) [886670ce]
528. css: hide hidden elements (bug #7141) (3) [03e6c6eb]
529. css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (4) [b2ecf73b]
530. css: internal ref to elem.runtimeStyle (bug #7608) (1) [088cf83d]
531. css: marginRight computed style (bug #3333) (1) [9a54c243]
532. css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (2) [9d1b7146]
533. css: jQuery.cssProps behavior, (bug #8402) (2) [bf0079da]
534. css: widows & orphans #8936 (1) [2d0ffbea]
535. css: can't get css for disconnected in IE<9, see #10254 and #8388 (2) [ce12502e]
536. css: can't get background-position in IE<9, see #10796 (8) [a21fbb69]
537. css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (1) [543290a6]
538. css: percentage properties for left and top should be transformed to pixels, see #9505 (2) [9c39f1cc]
539. css: Do not append px (#9548, #12990) (2) [e52d4453]
540. css: css('width') and css('height') should respect box-sizing, see #11004 (4) [e203a9fa]
541. css: global failure (2, 0, 2) [1669f4c6]
542. serialize: jQuery.param() (13, 9, 22) [9004571a]
543. serialize: jQuery.param() Constructed prop values (4) [2ed25aef]
544. serialize: serialize() (3, 2, 5) [1a0f6125]
545. ajax: jQuery.ajax() - success callbacks (2, 6, 8) [11a69f33]
546. ajax: jQuery.ajax() - success callbacks - (url, options) syntax (2, 6, 8) [473f095d]
547. ajax: jQuery.ajax() - success callbacks (late binding) (3, 3, 6) [df5387e3]
548. ajax: jQuery.ajax() - success callbacks (oncomplete binding) (5, 3, 8) [2a91caf1]
549. ajax: jQuery.ajax() - error callbacks (1, 6, 7) [ed8cd778]
550. ajax: jQuery.ajax() - textStatus and errorThrown values (4) [4af235be]
551. ajax: jQuery.ajax() - responseText on error (1, 0, 1) [7d19049b]
552. ajax: jQuery.ajax() - retry with jQuery.ajax( this ) (2) [fbd996cb]
553. ajax: jQuery.ajax() - headers (2, 0, 2) [809a3448]
554. ajax: jQuery.ajax() - Accept header (1, 0, 1) [41e037c7]
555. ajax: jQuery.ajax() - contentType (2, 0, 2) [25ace715]
556. ajax: jQuery.ajax() - protocol-less urls (1) [f9877014]
557. ajax: jQuery.ajax() - hash (3, 0, 3) [57d8038c]
558. ajax: jQuery.ajax() - cross-domain detection (1, 6, 7) [4d4f7314]
559. ajax: jQuery.ajax() - abort (1, 7, 8) [a2c63072]
560. ajax: jQuery.ajax() - events with context (1, 11, 12) [6b614dbe]
561. ajax: jQuery.ajax() - events without context (3) [dc08b44e]
562. ajax: #15118 - jQuery.ajax() - function without jQuery.event (2, 1, 3) [eb310de2]
563. ajax: jQuery.ajax() - context modification (2, 1, 3) [8a14e6eb]
564. ajax: jQuery.ajax() - context modification through ajaxSetup (2, 1, 3) [70060ead]
565. ajax: jQuery.ajax() - disabled globals (1, 2, 3) [2120810a]
566. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (2, 0, 2) [294e634f]
567. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (over JSONP) (3, 0, 3) [6c0c8596]
568. ajax: jQuery.ajax() - HEAD requests (2, 0, 2) [c9f4c146]
569. ajax: jQuery.ajax() - beforeSend (1, 0, 1) [41e697a5]
570. ajax: jQuery.ajax() - beforeSend, cancel request manually (2) [be018331]
571. ajax: jQuery.ajax() - dataType html (2, 0, 2) [2f65b789]
572. ajax: jQuery.ajax() - synchronous request (3, 0, 3) [3354227a]
573. ajax: jQuery.ajax() - synchronous request with callbacks (2, 0, 2) [6ac8a05a]
574. ajax: jQuery.ajax(), jQuery.get[Script|JSON](), jQuery.post(), pass-through request object (3, 5, 8) [e0e98fe7]
575. ajax: jQuery.ajax() - cache (12) [a2e1bcc4]
576. ajax: jQuery.ajax() - JSONP - Query String (?n) - Same Domain (9, 0, 9) [0af1ad6b]
577. ajax: jQuery.ajax() - JSONP - Explicit callback param - Same Domain (8, 1, 9) [89307bc0]
578. ajax: jQuery.ajax() - JSONP - Callback in data - Same Domain (5, 0, 5) [21ec63be]
579. ajax: jQuery.ajax() - JSONP - POST - Same Domain (7, 0, 7) [4563ce54]
580. ajax: jQuery.ajax() - JSONP - Same Domain (5, 0, 5) [317c8a55]
581. ajax: jQuery.ajax() - JSONP - Query String (?n) - Cross Domain (4, 0, 4) [b40cd6d7]
582. ajax: jQuery.ajax() - JSONP - Explicit callback param - Cross Domain (5, 1, 6) [fda7d322]
583. ajax: jQuery.ajax() - JSONP - Callback in data - Cross Domain (2, 0, 2) [7c68eae4]
584. ajax: jQuery.ajax() - JSONP - POST - Cross Domain (3, 0, 3) [c7ded30e]
585. ajax: jQuery.ajax() - JSONP - Cross Domain (3, 0, 3) [5edd972d]
586. ajax: jQuery.ajax() - script, Remote (2, 0, 2) [bc1195a3]
587. ajax: jQuery.ajax() - script, Remote with POST (3, 0, 3) [4085a57d]
588. ajax: jQuery.ajax() - script, Remote with scheme-less URL (2, 0, 2) [40650873]
589. ajax: jQuery.ajax() - malformed JSON (2) [4743732b]
590. ajax: jQuery.ajax() - script by content-type (2, 0, 2) [37339ee0]
591. ajax: jQuery.ajax() - JSON by content-type (2, 0, 2) [e18e807d]
592. ajax: jQuery.ajax() - JSON by content-type disabled with options (2, 0, 2) [93d5d505]
593. ajax: jQuery.ajax() - simple get (1, 0, 1) [cd930fe6]
594. ajax: jQuery.ajax() - simple post (1, 0, 1) [e4d32a10]
595. ajax: jQuery.ajax() - data option - empty bodies for non-GET requests (1, 0, 1) [beecf48c]
596. ajax: jQuery.ajax() - If-Modified-Since support (cache) (3, 0, 3) [a14493a6]
597. ajax: jQuery.ajax() - Etag support (cache) (2, 0, 2) [2e99b551]
598. ajax: jQuery.ajax() - If-Modified-Since support (no cache) (3, 0, 3) [17b51107]
599. ajax: jQuery.ajax() - Etag support (no cache) (2, 0, 2) [1d8e0b7c]
600. ajax: jQuery.ajax() - failing cross-domain (non-existing) (1) [8fe7268b]
601. ajax: jQuery.ajax() - failing cross-domain (1) [cf74d80b]
602. ajax: jQuery.ajax() - atom+xml (1, 0, 1) [ed49f85b]
603. ajax: jQuery.ajax() - statusText (2, 0, 2) [31c72c3d]
604. ajax: jQuery.ajax() - statusCode (9, 11, 20) [31bf94fd]
605. ajax: jQuery.ajax() - transitive conversions (3, 0, 3) [970147a0]
606. ajax: jQuery.ajax() - overrideMimeType (2, 0, 2) [e90656f8]
607. ajax: jQuery.ajax() - empty json gets to error callback instead of success callback. (1, 0, 1) [b1aea05b]
608. ajax: #2688 - jQuery.ajax() - beforeSend, cancel request (2) [d97cf56e]
609. ajax: #2806 - jQuery.ajax() - data option - evaluate function values (1, 0, 1) [048476ed]
610. ajax: #7531 - jQuery.ajax() - Location object as url (1) [ba63b869]
611. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Same Domain (1) [ee78960e]
612. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Cross Domain (1) [41630294]
613. ajax: #8107 - jQuery.ajax() - multiple method signatures introduced in 1.5 (4) [93452e30]
614. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Same Domain (2, 0, 2) [c61fc201]
615. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Cross Domain (2, 0, 2) [5ea15501]
616. ajax: #9887 - jQuery.ajax() - Context with circular references (#9887) (2) [f66111a0]
617. ajax: #10093 - jQuery.ajax() - falsy url as argument (4) [2ed44440]
618. ajax: #10093 - jQuery.ajax() - falsy url in settings object (4) [af4a1dec]
619. ajax: #11151 - jQuery.ajax() - parse error body (2, 0, 2) [d8837896]
620. ajax: #11426 - jQuery.ajax() - loading binary data shouldn't throw an exception in IE (1, 0, 1) [dc9cbb04]
621. ajax: #11743 - jQuery.ajax() - script, throws exception (3, 0, 3) [fb3d7f01]
622. ajax: #12004 - jQuery.ajax() - method is an alias of type - method set globally (3, 0, 3) [11112fda]
623. ajax: #12004 - jQuery.ajax() - method is an alias of type - type set globally (3, 0, 3) [b6160961]
624. ajax: #13276 - jQuery.ajax() - compatibility between XML documents from ajax requests and parsed string (1) [4a5ae56b]
625. ajax: #13292 - jQuery.ajax() - converter is bypassed for 204 requests (3, 0, 3) [ae3814fb]
626. ajax: #13388 - jQuery.ajax() - responseXML (2, 0, 2) [5fc9540b]
627. ajax: #13922 - jQuery.ajax() - converter is bypassed for HEAD requests (3, 0, 3) [5a6e2185]
628. ajax: #13240 - jQuery.ajax() - support non-RFC2616 methods (1, 0, 1) [14c6c1a9]
629. ajax: global failure (2, 0, 2) [1fdde709]
630. effects: sanity check (1, 0, 1) [efdae790]
631. effects: show() basic (2, 2, 4) [b34666a6]
632. effects: show() (2, 13, 15) [d8a15098]
633. effects: show(Number) - other displays (3, 0, 3) [3cc75445]
634. effects: Persist correct display value (3, 0, 3) [cfd734d7]
635. effects: animate(Hash, Object, Function) (1) [cf19d4bb]
636. effects: animate relative values (2, 0, 2) [bc0d4d1d]
637. effects: animate negative height (1, 0, 1) [94637799]
638. effects: animate negative margin (1, 0, 1) [9cb76c20]
639. effects: animate negative margin with px (1, 0, 1) [aa03bfa2]
640. effects: animate negative padding (1, 0, 1) [982223df]
641. effects: animate block as inline width/height (2, 0, 2) [fa0a9ef5]
642. effects: animate native inline width/height (2, 0, 2) [563ce3a7]
643. effects: animate block width/height (2, 0, 2) [5c02ecbc]
644. effects: animate table width/height (1, 0, 1) [2014071b]
645. effects: animate table-row width/height (2, 0, 2) [b9cdf82e]
646. effects: animate table-cell width/height (2, 0, 2) [7ac0fc76]
647. effects: animate percentage(%) on width/height (2, 0, 2) [3ca3cfea]
648. effects: animate resets overflow-x and overflow-y when finished (2, 0, 2) [2ea5bb3f]
649. effects: animate option { queue: false } (1, 1, 2) [228dc8a0]
650. effects: animate option { queue: true } (1, 1, 2) [012e6a8b]
651. effects: animate option { queue: 'name' } (2, 2, 4) [3b587672]
652. effects: animate with no properties (1, 1, 2) [0c707191]
653. effects: animate duration 0 (2, 8, 10) [de89c01d]
654. effects: animate hyphenated properties (1, 0, 1) [e0741176]
655. effects: animate non-element (1, 0, 1) [8a2a7ba3]
656. effects: stop() (3, 1, 4) [d94a505d]
657. effects: stop() - several in queue (5) [900f6230]
658. effects: stop(clearQueue) (2, 2, 4) [99389d19]
659. effects: stop(clearQueue, gotoEnd) (1, 0, 1) [185a6135]
660. effects: stop( queue, ..., ... ) - Stop single queues (2, 1, 3) [91a9f589]
661. effects: toggle() (6) [0153e8af]
662. effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (7) [1185dbde]
663. effects: Overflow and Display (2, 0, 2) [fbe416b5]
664. effects: CSS Auto to 0 (2, 0, 2) [cd18cc65]
665. effects: CSS Auto to 50 (2, 0, 2) [d600c106]
666. effects: CSS Auto to 100 (2, 0, 2) [ea1750e6]
667. effects: CSS Auto to show (2, 0, 2) [58f1a6a8]
668. effects: CSS Auto to hide (2, 0, 2) [58eca8ed]
669. effects: JS Auto to 0 (2, 0, 2) [d95a1dbf]
670. effects: JS Auto to 50 (2, 0, 2) [51e99aec]
671. effects: JS Auto to 100 (2, 0, 2) [eb49b3c0]
672. effects: JS Auto to show (2, 0, 2) [7e0b9f0e]
673. effects: JS Auto to hide (2, 0, 2) [7e06a153]
674. effects: CSS 100 to 0 (2, 0, 2) [20d4da91]
675. effects: CSS 100 to 50 (2, 0, 2) [f9c6785a]
676. effects: CSS 100 to 100 (2, 0, 2) [3f088412]
677. effects: CSS 100 to show (2, 0, 2) [a226d8fc]
678. effects: CSS 100 to hide (2, 0, 2) [a221db41]
679. effects: JS 100 to 0 (2, 0, 2) [94d6f5f7]
680. effects: JS 100 to 50 (2, 0, 2) [0607c9b4]
681. effects: JS 100 to 100 (2, 0, 2) [baf15df8]
682. effects: JS 100 to show (2, 0, 2) [a3593bd6]
683. effects: JS 100 to hide (2, 0, 2) [a3543e1b]
684. effects: CSS 50 to 0 (2, 0, 2) [2ec35d59]
685. effects: CSS 50 to 50 (2, 0, 2) [a9a84e92]
686. effects: CSS 50 to 100 (2, 0, 2) [8b6174da]
687. effects: CSS 50 to show (2, 0, 2) [e0ec0134]
688. effects: CSS 50 to hide (2, 0, 2) [e0e70379]
689. effects: JS 50 to 0 (2, 0, 2) [21fd3d33]
690. effects: JS 50 to 50 (2, 0, 2) [1daa69f8]
691. effects: JS 50 to 100 (2, 0, 2) [97a2c634]
692. effects: JS 50 to show (2, 0, 2) [5cd4db1a]
693. effects: JS 50 to hide (2, 0, 2) [5ccfdd5f]
694. effects: CSS 0 to 0 (2, 0, 2) [cef43972]
695. effects: CSS 0 to 50 (2, 0, 2) [0f92f599]
696. effects: CSS 0 to 100 (2, 0, 2) [e2cbaeb3]
697. effects: CSS 0 to show (2, 0, 2) [76c9027b]
698. effects: CSS 0 to hide (2, 0, 2) [76c404c0]
699. effects: JS 0 to 0 (2, 0, 2) [6b71f658]
700. effects: JS 0 to 50 (2, 0, 2) [02ccd573]
701. effects: JS 0 to 100 (2, 0, 2) [56cdca19]
702. effects: JS 0 to show (2, 0, 2) [830a53d5]
703. effects: JS 0 to hide (2, 0, 2) [8305561a]
704. effects: Effects chaining (2, 0, 2) [30b31e59]
705. effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (2, 0, 2) [64f5d5da]
706. effects: interrupt toggle (2, 0, 2) [bfb8430b]
707. effects: animate with per-property easing (2, 0, 2) [31782e85]
708. effects: animate with CSS shorthand properties (2, 0, 2) [6cdfbda6]
709. effects: hide hidden elements, with animation (bug #7141) (3, 2, 5) [f7e757ea]
710. effects: animate unit-less properties (#4966) (3, 1, 4) [8ba15e93]
711. effects: animate properties missing px w/ opacity as last (#9074) (3, 2, 5) [4de2c7cb]
712. effects: callbacks should fire in correct order (#9100) (3, 0, 3) [ee12de1c]
713. effects: callbacks that throw exceptions will be removed (#5684) (99, 0, 99) [b234370d]
714. effects: animate will scale margin properties individually (3, 1, 4) [eb5df1cc]
715. effects: Do not append px to 'fill-opacity' #9548 (1) [de39926d]
716. effects: line-height animates correctly (#13855) (8, 4, 12) [2692e84b]
717. effects: jQuery.Animation( object, props, opts ) (3, 0, 3) [06a080f4]
718. effects: Animate Option: step: function( percent, tween ) (3, 0, 3) [d9eb74b1]
719. effects: Animate callbacks have correct context (2, 0, 2) [48f58a6c]
720. effects: User supplied callback called after show when fx off (#8892) (2) [fab3ee0c]
721. effects: animate should set display for disconnected nodes (5, 1, 6) [1cea88d3]
722. effects: Animation callback should not show animated element as :animated (#7157) (3, 0, 3) [4b540974]
723. effects: Initial step callback should show element as :animated (#14623) (3, 0, 3) [775bf4aa]
724. effects: hide called on element within hidden parent should set display to none (#10045) (3, 0, 3) [89eb04cf]
725. effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (3, 0, 3) [eda025cc]
726. effects: hide should not leave hidden inline elements visible (#14848) (2, 0, 2) [7da02112]
727. effects: Handle queue:false promises (2, 0, 2) [4a1e01dc]
728. effects: multiple unqueued and promise (3, 0, 3) [7b25a5f4]
729. effects: animate does not change start value for non-px animation (#7109) (3, 0, 3) [aad22350]
730. effects: non-px animation handles non-numeric start (#11971) (2, 0, 2) [42f0f191]
731. effects: Animation callbacks (#11797) (4, 6, 10) [5f8a45b7]
732. effects: Animate properly sets overflow hidden when animating width/height (#12117) (3, 0, 3) [843718d3]
733. effects: Each tick of the timer loop uses a fresh time (#12837) (3, 0, 3) [c33eae3e]
734. effects: Animations with 0 duration don't ease (#12273) (1) [015c4700]
735. effects: toggle state tests: toggle (#8685) (2, 0, 2) [053bfcad]
736. effects: toggle state tests: slideToggle (#8685) (2, 0, 2) [10217f72]
737. effects: toggle state tests: fadeToggle (#8685) (2, 0, 2) [a103e349]
738. effects: jQuery.fx.start & jQuery.fx.stop hook points (3) [c6e72c4c]
739. effects: .finish() completes all queued animations (3, 0, 3) [792af4ff]
740. effects: .finish( false ) - unqueued animations (3, 0, 3) [ee304b1d]
741. effects: .finish( "custom" ) - custom queue animations (3, 1, 4) [cc2d89b1]
742. effects: .finish() calls finish of custom queue functions (6) [a098b6dc]
743. effects: .finish() is applied correctly when multiple elements were animated (#13937) (3, 0, 3) [7edca75c]
744. effects: slideDown() after stop() (#13483) (2, 0, 2) [a874816a]
745. effects: Respect display value on inline elements (#14824) (2, 0, 2) [647e4e8f]
746. offset: empty set (2) [a2eac746]
747. offset: object without getBoundingClientRect (2, 0, 2) [a44dc5f9]
748. offset: disconnected node (2) [f048ddfe]
749. offset: offset/absolute (2, 0, 2) [4e04a26a]
750. offset: offset/absolute (2, 0, 2) [728faaf6]
751. offset: offset/relative (2, 0, 2) [c5f78fbf]
752. offset: offset/static (2, 0, 2) [f7880421]
753. offset: offset/fixed (2, 0, 2) [bcedaf61]
754. offset: offset/table (2, 0, 2) [bdaf03bb]
755. offset: offset/scroll (2, 0, 2) [f6a01c80]
756. offset: offset/body (2, 0, 2) [ed504015]
757. offset: chaining (3, 0, 3) [6d9ef26a]
758. offset: offsetParent (1, 12, 13) [f4faf786]
759. offset: fractions (see #7730 and #7885) (2) [373463ce]
760. dimensions: width() (2, 9, 11) [855ae478]
761. dimensions: width(Function) (2, 9, 11) [ae664c80]
762. dimensions: width(Function(args)) (2) [0db1c3fc]
763. dimensions: height() (2, 9, 11) [44094357]
764. dimensions: height(Function) (2, 9, 11) [27735c5f]
765. dimensions: height(Function(args)) (2) [5b05309b]
766. dimensions: innerWidth() (2, 6, 8) [3033c180]
767. dimensions: innerHeight() (3, 5, 8) [f44c074f]
768. dimensions: outerWidth() (4, 9, 13) [2a572bbb]
769. dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (16) [f05103b6]
770. dimensions: getting dimensions shouldn't modify runtimeStyle see #9233 (1) [fd1a1aee]
771. dimensions: table dimensions (2) [5a628b4e]
772. dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (16) [16694f32]
773. dimensions: outerHeight() (4, 9, 13) [3e95e474]
774. dimensions: passing undefined is a setter #5571 (4) [bdb02bc3]
775. dimensions: getters on non elements should return null (8, 0, 8) [e0ba59c6]
776. dimensions: setters with and without box-sizing:border-box (20) [6d13f464]
777. dimensions: dimensions/documentSmall (2, 0, 2) [e1ec02d9]
778. dimensions: dimensions/documentLarge (2, 0, 2) [e184290d]
779. animation: Animation( subject, props, opts ) - shape (3, 0, 3) [b1e3617f]
780. animation: Animation.prefilter( fn ) - calls prefilter after defaultPrefilter (1) [2a50ba1f]
781. animation: Animation.prefilter( fn, true ) - calls prefilter before defaultPrefilter (1) [c55d16bc]
782. animation: Animation.prefilter - prefilter return hooks (34) [2b51eabf]
783. animation: Animation.tweener( fn ) - unshifts a * tweener (2) [803364a1]
784. animation: Animation.tweener( 'prop', fn ) - unshifts a 'prop' tweener (4) [12355747]
785. animation: Animation.tweener( 'list of props', fn ) - unshifts a tweener to each prop (2) [590e4dc3]
786. tween: jQuery.Tween - Default propHooks on plain objects (8) [09121f56]
787. tween: jQuery.Tween - Default propHooks on elements (19) [03fab35f]
788. tween: jQuery.Tween - Plain Object (13) [064e21dc]
789. tween: jQuery.Tween - Element (2, 8, 10) [1a509f35]
790. tween: jQuery.Tween - No duration (3) [05bfc4cc]
791. tween: jQuery.Tween - step function option (4) [5caad4b0]
792. tween: jQuery.Tween - custom propHooks (3) [8af203e5]
793. tween: jQuery.Tween - custom propHooks - advanced values (5) [701d4d72]
